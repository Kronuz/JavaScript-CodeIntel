module.exports = function(e) {
 var t = {};
 function n(e) {
  return "" + ({
   0: "node_modules/eslint-language-service"
  }[e] || e) + ".js";
 }
 function r(t) {
  var r = n(t);
  var i = require(__dirname + "/" + r);
  var o = i.modules, s = i.ids;
  for (var a in o) {
   e[a] = o[a];
  }
 }
 var i = [ [ "J8Cw" ] ];
 for (var o = 0; o < i.length; ++o) {
  var s = i[o];
  for (var a = 1; a < s.length; ++a) {
   var u = s[a];
   r(u);
  }
 }
 function c(n) {
  if (t[n]) {
   return t[n].exports;
  }
  var r = t[n] = {
   i: n,
   l: false,
   exports: {}
  };
  e[n].call(r.exports, r, r.exports, c);
  r.l = true;
  return r.exports;
 }
 c.m = e;
 c.c = t;
 c.d = function(e, t, n) {
  if (!c.o(e, t)) {
   Object.defineProperty(e, t, {
    enumerable: true,
    get: n
   });
  }
 };
 c.r = function(e) {
  if (typeof Symbol !== "undefined" && Symbol.toStringTag) {
   Object.defineProperty(e, Symbol.toStringTag, {
    value: "Module"
   });
  }
  Object.defineProperty(e, "__esModule", {
   value: true
  });
 };
 c.t = function(e, t) {
  if (t & 1) e = c(e);
  if (t & 8) return e;
  if (t & 4 && typeof e === "object" && e && e.__esModule) return e;
  var n = Object.create(null);
  c.r(n);
  Object.defineProperty(n, "default", {
   enumerable: true,
   value: e
  });
  if (t & 2 && typeof e != "string") for (var r in e) c.d(n, r, function(t) {
   return e[t];
  }.bind(null, r));
  return n;
 };
 c.n = function(e) {
  var t = e && e.__esModule ? function t() {
   return e["default"];
  } : function t() {
   return e;
  };
  c.d(t, "a", t);
  return t;
 };
 c.o = function(e, t) {
  return Object.prototype.hasOwnProperty.call(e, t);
 };
 c.p = "";
 return c(c.s = "J8Cw");
}({
 "+cRy": function(e, t, n) {
  "use strict";
  Object.defineProperty(t, "__esModule", {
   value: true
  });
  const r = n("owkM");
  const i = n("C+6V");
  const o = n("CcFB");
  t.ImplementationRequest = o.ImplementationRequest;
  const s = n("8ahE");
  t.TypeDefinitionRequest = s.TypeDefinitionRequest;
  const a = n("VqZt");
  t.WorkspaceFoldersRequest = a.WorkspaceFoldersRequest;
  t.DidChangeWorkspaceFoldersNotification = a.DidChangeWorkspaceFoldersNotification;
  const u = n("sKb1");
  t.ConfigurationRequest = u.ConfigurationRequest;
  const c = n("zZpG");
  t.DocumentColorRequest = c.DocumentColorRequest;
  t.ColorPresentationRequest = c.ColorPresentationRequest;
  var f;
  (function(e) {
   function t(e) {
    let t = e;
    return r.string(t.language) || r.string(t.scheme) || r.string(t.pattern);
   }
   e.is = t;
  })(f = t.DocumentFilter || (t.DocumentFilter = {}));
  var l;
  (function(e) {
   e.type = new i.RequestType("client/registerCapability");
  })(l = t.RegistrationRequest || (t.RegistrationRequest = {}));
  var d;
  (function(e) {
   e.type = new i.RequestType("client/unregisterCapability");
  })(d = t.UnregistrationRequest || (t.UnregistrationRequest = {}));
  var p;
  (function(e) {
   e.None = 0;
   e.Full = 1;
   e.Incremental = 2;
  })(p = t.TextDocumentSyncKind || (t.TextDocumentSyncKind = {}));
  var h;
  (function(e) {
   e.type = new i.RequestType("initialize");
  })(h = t.InitializeRequest || (t.InitializeRequest = {}));
  var g;
  (function(e) {
   e.unknownProtocolVersion = 1;
  })(g = t.InitializeError || (t.InitializeError = {}));
  var v;
  (function(e) {
   e.type = new i.NotificationType("initialized");
  })(v = t.InitializedNotification || (t.InitializedNotification = {}));
  var m;
  (function(e) {
   e.type = new i.RequestType0("shutdown");
  })(m = t.ShutdownRequest || (t.ShutdownRequest = {}));
  var y;
  (function(e) {
   e.type = new i.NotificationType0("exit");
  })(y = t.ExitNotification || (t.ExitNotification = {}));
  var _;
  (function(e) {
   e.type = new i.NotificationType("workspace/didChangeConfiguration");
  })(_ = t.DidChangeConfigurationNotification || (t.DidChangeConfigurationNotification = {}));
  var b;
  (function(e) {
   e.Error = 1;
   e.Warning = 2;
   e.Info = 3;
   e.Log = 4;
  })(b = t.MessageType || (t.MessageType = {}));
  var w;
  (function(e) {
   e.type = new i.NotificationType("window/showMessage");
  })(w = t.ShowMessageNotification || (t.ShowMessageNotification = {}));
  var R;
  (function(e) {
   e.type = new i.RequestType("window/showMessageRequest");
  })(R = t.ShowMessageRequest || (t.ShowMessageRequest = {}));
  var C;
  (function(e) {
   e.type = new i.NotificationType("window/logMessage");
  })(C = t.LogMessageNotification || (t.LogMessageNotification = {}));
  var T;
  (function(e) {
   e.type = new i.NotificationType("telemetry/event");
  })(T = t.TelemetryEventNotification || (t.TelemetryEventNotification = {}));
  var x;
  (function(e) {
   e.type = new i.NotificationType("textDocument/didOpen");
  })(x = t.DidOpenTextDocumentNotification || (t.DidOpenTextDocumentNotification = {}));
  var q;
  (function(e) {
   e.type = new i.NotificationType("textDocument/didChange");
  })(q = t.DidChangeTextDocumentNotification || (t.DidChangeTextDocumentNotification = {}));
  var S;
  (function(e) {
   e.type = new i.NotificationType("textDocument/didClose");
  })(S = t.DidCloseTextDocumentNotification || (t.DidCloseTextDocumentNotification = {}));
  var k;
  (function(e) {
   e.type = new i.NotificationType("textDocument/didSave");
  })(k = t.DidSaveTextDocumentNotification || (t.DidSaveTextDocumentNotification = {}));
  var E;
  (function(e) {
   e.type = new i.NotificationType("textDocument/willSave");
  })(E = t.WillSaveTextDocumentNotification || (t.WillSaveTextDocumentNotification = {}));
  var D;
  (function(e) {
   e.type = new i.RequestType("textDocument/willSaveWaitUntil");
  })(D = t.WillSaveTextDocumentWaitUntilRequest || (t.WillSaveTextDocumentWaitUntilRequest = {}));
  var M;
  (function(e) {
   e.type = new i.NotificationType("workspace/didChangeWatchedFiles");
  })(M = t.DidChangeWatchedFilesNotification || (t.DidChangeWatchedFilesNotification = {}));
  var N;
  (function(e) {
   e.Created = 1;
   e.Changed = 2;
   e.Deleted = 3;
  })(N = t.FileChangeType || (t.FileChangeType = {}));
  var O;
  (function(e) {
   e.Create = 1;
   e.Change = 2;
   e.Delete = 4;
  })(O = t.WatchKind || (t.WatchKind = {}));
  var P;
  (function(e) {
   e.type = new i.NotificationType("textDocument/publishDiagnostics");
  })(P = t.PublishDiagnosticsNotification || (t.PublishDiagnosticsNotification = {}));
  var j;
  (function(e) {
   e.Invoked = 1;
   e.TriggerCharacter = 2;
   e.TriggerForIncompleteCompletions = 3;
  })(j = t.CompletionTriggerKind || (t.CompletionTriggerKind = {}));
  var W;
  (function(e) {
   e.type = new i.RequestType("textDocument/completion");
  })(W = t.CompletionRequest || (t.CompletionRequest = {}));
  var F;
  (function(e) {
   e.type = new i.RequestType("completionItem/resolve");
  })(F = t.CompletionResolveRequest || (t.CompletionResolveRequest = {}));
  var I;
  (function(e) {
   e.type = new i.RequestType("textDocument/hover");
  })(I = t.HoverRequest || (t.HoverRequest = {}));
  var L;
  (function(e) {
   e.type = new i.RequestType("textDocument/signatureHelp");
  })(L = t.SignatureHelpRequest || (t.SignatureHelpRequest = {}));
  var A;
  (function(e) {
   e.type = new i.RequestType("textDocument/definition");
  })(A = t.DefinitionRequest || (t.DefinitionRequest = {}));
  var H;
  (function(e) {
   e.type = new i.RequestType("textDocument/references");
  })(H = t.ReferencesRequest || (t.ReferencesRequest = {}));
  var z;
  (function(e) {
   e.type = new i.RequestType("textDocument/documentHighlight");
  })(z = t.DocumentHighlightRequest || (t.DocumentHighlightRequest = {}));
  var U;
  (function(e) {
   e.type = new i.RequestType("textDocument/documentSymbol");
  })(U = t.DocumentSymbolRequest || (t.DocumentSymbolRequest = {}));
  var $;
  (function(e) {
   e.type = new i.RequestType("workspace/symbol");
  })($ = t.WorkspaceSymbolRequest || (t.WorkspaceSymbolRequest = {}));
  var K;
  (function(e) {
   e.type = new i.RequestType("textDocument/codeAction");
  })(K = t.CodeActionRequest || (t.CodeActionRequest = {}));
  var V;
  (function(e) {
   e.type = new i.RequestType("textDocument/codeLens");
  })(V = t.CodeLensRequest || (t.CodeLensRequest = {}));
  var B;
  (function(e) {
   e.type = new i.RequestType("codeLens/resolve");
  })(B = t.CodeLensResolveRequest || (t.CodeLensResolveRequest = {}));
  var J;
  (function(e) {
   e.type = new i.RequestType("textDocument/formatting");
  })(J = t.DocumentFormattingRequest || (t.DocumentFormattingRequest = {}));
  var G;
  (function(e) {
   e.type = new i.RequestType("textDocument/rangeFormatting");
  })(G = t.DocumentRangeFormattingRequest || (t.DocumentRangeFormattingRequest = {}));
  var Z;
  (function(e) {
   e.type = new i.RequestType("textDocument/onTypeFormatting");
  })(Z = t.DocumentOnTypeFormattingRequest || (t.DocumentOnTypeFormattingRequest = {}));
  var Q;
  (function(e) {
   e.type = new i.RequestType("textDocument/rename");
  })(Q = t.RenameRequest || (t.RenameRequest = {}));
  var Y;
  (function(e) {
   e.type = new i.RequestType("textDocument/documentLink");
  })(Y = t.DocumentLinkRequest || (t.DocumentLinkRequest = {}));
  var X;
  (function(e) {
   e.type = new i.RequestType("documentLink/resolve");
  })(X = t.DocumentLinkResolveRequest || (t.DocumentLinkResolveRequest = {}));
  var ee;
  (function(e) {
   e.type = new i.RequestType("workspace/executeCommand");
  })(ee = t.ExecuteCommandRequest || (t.ExecuteCommandRequest = {}));
  var te;
  (function(e) {
   e.type = new i.RequestType("workspace/applyEdit");
  })(te = t.ApplyWorkspaceEditRequest || (t.ApplyWorkspaceEditRequest = {}));
 },
 "/7TX": function(e, t, n) {
  "use strict";
  var r = this && this.__extends || function() {
   var e = Object.setPrototypeOf || {
    __proto__: []
   } instanceof Array && function(e, t) {
    e.__proto__ = t;
   } || function(e, t) {
    for (var n in t) if (t.hasOwnProperty(n)) e[n] = t[n];
   };
   return function(t, n) {
    e(t, n);
    function r() {
     this.constructor = t;
    }
    t.prototype = n === null ? Object.create(n) : (r.prototype = n.prototype, new r());
   };
  }();
  Object.defineProperty(t, "__esModule", {
   value: true
  });
  var i = n("1vg8");
  var o;
  (function(e) {
   e.ParseError = -32700;
   e.InvalidRequest = -32600;
   e.MethodNotFound = -32601;
   e.InvalidParams = -32602;
   e.InternalError = -32603;
   e.serverErrorStart = -32099;
   e.serverErrorEnd = -32e3;
   e.ServerNotInitialized = -32002;
   e.UnknownErrorCode = -32001;
   e.RequestCancelled = -32800;
   e.MessageWriteError = 1;
   e.MessageReadError = 2;
  })(o = t.ErrorCodes || (t.ErrorCodes = {}));
  var s = function(e) {
   r(t, e);
   function t(n, r, s) {
    var a = e.call(this, r) || this;
    a.code = i.number(n) ? n : o.UnknownErrorCode;
    a.data = s;
    Object.setPrototypeOf(a, t.prototype);
    return a;
   }
   t.prototype.toJson = function() {
    return {
     code: this.code,
     message: this.message,
     data: this.data
    };
   };
   return t;
  }(Error);
  t.ResponseError = s;
  var a = function() {
   function e(e, t) {
    this._method = e;
    this._numberOfParams = t;
   }
   Object.defineProperty(e.prototype, "method", {
    get: function() {
     return this._method;
    },
    enumerable: true,
    configurable: true
   });
   Object.defineProperty(e.prototype, "numberOfParams", {
    get: function() {
     return this._numberOfParams;
    },
    enumerable: true,
    configurable: true
   });
   return e;
  }();
  t.AbstractMessageType = a;
  var u = function(e) {
   r(t, e);
   function t(t) {
    var n = e.call(this, t, 0) || this;
    n._ = undefined;
    return n;
   }
   return t;
  }(a);
  t.RequestType0 = u;
  var c = function(e) {
   r(t, e);
   function t(t) {
    var n = e.call(this, t, 1) || this;
    n._ = undefined;
    return n;
   }
   return t;
  }(a);
  t.RequestType = c;
  var f = function(e) {
   r(t, e);
   function t(t) {
    var n = e.call(this, t, 1) || this;
    n._ = undefined;
    return n;
   }
   return t;
  }(a);
  t.RequestType1 = f;
  var l = function(e) {
   r(t, e);
   function t(t) {
    var n = e.call(this, t, 2) || this;
    n._ = undefined;
    return n;
   }
   return t;
  }(a);
  t.RequestType2 = l;
  var d = function(e) {
   r(t, e);
   function t(t) {
    var n = e.call(this, t, 3) || this;
    n._ = undefined;
    return n;
   }
   return t;
  }(a);
  t.RequestType3 = d;
  var p = function(e) {
   r(t, e);
   function t(t) {
    var n = e.call(this, t, 4) || this;
    n._ = undefined;
    return n;
   }
   return t;
  }(a);
  t.RequestType4 = p;
  var h = function(e) {
   r(t, e);
   function t(t) {
    var n = e.call(this, t, 5) || this;
    n._ = undefined;
    return n;
   }
   return t;
  }(a);
  t.RequestType5 = h;
  var g = function(e) {
   r(t, e);
   function t(t) {
    var n = e.call(this, t, 6) || this;
    n._ = undefined;
    return n;
   }
   return t;
  }(a);
  t.RequestType6 = g;
  var v = function(e) {
   r(t, e);
   function t(t) {
    var n = e.call(this, t, 7) || this;
    n._ = undefined;
    return n;
   }
   return t;
  }(a);
  t.RequestType7 = v;
  var m = function(e) {
   r(t, e);
   function t(t) {
    var n = e.call(this, t, 8) || this;
    n._ = undefined;
    return n;
   }
   return t;
  }(a);
  t.RequestType8 = m;
  var y = function(e) {
   r(t, e);
   function t(t) {
    var n = e.call(this, t, 9) || this;
    n._ = undefined;
    return n;
   }
   return t;
  }(a);
  t.RequestType9 = y;
  var _ = function(e) {
   r(t, e);
   function t(t) {
    var n = e.call(this, t, 1) || this;
    n._ = undefined;
    return n;
   }
   return t;
  }(a);
  t.NotificationType = _;
  var b = function(e) {
   r(t, e);
   function t(t) {
    var n = e.call(this, t, 0) || this;
    n._ = undefined;
    return n;
   }
   return t;
  }(a);
  t.NotificationType0 = b;
  var w = function(e) {
   r(t, e);
   function t(t) {
    var n = e.call(this, t, 1) || this;
    n._ = undefined;
    return n;
   }
   return t;
  }(a);
  t.NotificationType1 = w;
  var R = function(e) {
   r(t, e);
   function t(t) {
    var n = e.call(this, t, 2) || this;
    n._ = undefined;
    return n;
   }
   return t;
  }(a);
  t.NotificationType2 = R;
  var C = function(e) {
   r(t, e);
   function t(t) {
    var n = e.call(this, t, 3) || this;
    n._ = undefined;
    return n;
   }
   return t;
  }(a);
  t.NotificationType3 = C;
  var T = function(e) {
   r(t, e);
   function t(t) {
    var n = e.call(this, t, 4) || this;
    n._ = undefined;
    return n;
   }
   return t;
  }(a);
  t.NotificationType4 = T;
  var x = function(e) {
   r(t, e);
   function t(t) {
    var n = e.call(this, t, 5) || this;
    n._ = undefined;
    return n;
   }
   return t;
  }(a);
  t.NotificationType5 = x;
  var q = function(e) {
   r(t, e);
   function t(t) {
    var n = e.call(this, t, 6) || this;
    n._ = undefined;
    return n;
   }
   return t;
  }(a);
  t.NotificationType6 = q;
  var S = function(e) {
   r(t, e);
   function t(t) {
    var n = e.call(this, t, 7) || this;
    n._ = undefined;
    return n;
   }
   return t;
  }(a);
  t.NotificationType7 = S;
  var k = function(e) {
   r(t, e);
   function t(t) {
    var n = e.call(this, t, 8) || this;
    n._ = undefined;
    return n;
   }
   return t;
  }(a);
  t.NotificationType8 = k;
  var E = function(e) {
   r(t, e);
   function t(t) {
    var n = e.call(this, t, 9) || this;
    n._ = undefined;
    return n;
   }
   return t;
  }(a);
  t.NotificationType9 = E;
  function D(e) {
   var t = e;
   return t && i.string(t.method) && (i.string(t.id) || i.number(t.id));
  }
  t.isRequestMessage = D;
  function M(e) {
   var t = e;
   return t && i.string(t.method) && e.id === void 0;
  }
  t.isNotificationMessage = M;
  function N(e) {
   var t = e;
   return t && (t.result !== void 0 || !!t.error) && (i.string(t.id) || i.number(t.id) || t.id === null);
  }
  t.isResponseMessage = N;
 },
 "1vg8": function(e, t, n) {
  "use strict";
  Object.defineProperty(t, "__esModule", {
   value: true
  });
  var r = Object.prototype.toString;
  function i(e) {
   return e === true || e === false;
  }
  t.boolean = i;
  function o(e) {
   return r.call(e) === "[object String]";
  }
  t.string = o;
  function s(e) {
   return r.call(e) === "[object Number]";
  }
  t.number = s;
  function a(e) {
   return r.call(e) === "[object Error]";
  }
  t.error = a;
  function u(e) {
   return r.call(e) === "[object Function]";
  }
  t.func = u;
  function c(e) {
   return Array.isArray(e);
  }
  t.array = c;
  function f(e) {
   return c(e) && e.every(function(e) {
    return o(e);
   });
  }
  t.stringArray = f;
 },
 "4Wfv": function(e, t, n) {
  "use strict";
  Object.defineProperty(t, "__esModule", {
   value: true
  });
  var r;
  (function(e) {
   e.None = 0;
   e.First = 1;
   e.Last = 2;
  })(r = t.Touch || (t.Touch = {}));
  var i = function() {
   function e() {
    this._map = new Map();
    this._head = undefined;
    this._tail = undefined;
    this._size = 0;
   }
   e.prototype.clear = function() {
    this._map.clear();
    this._head = undefined;
    this._tail = undefined;
    this._size = 0;
   };
   e.prototype.isEmpty = function() {
    return !this._head && !this._tail;
   };
   Object.defineProperty(e.prototype, "size", {
    get: function() {
     return this._size;
    },
    enumerable: true,
    configurable: true
   });
   e.prototype.has = function(e) {
    return this._map.has(e);
   };
   e.prototype.get = function(e) {
    var t = this._map.get(e);
    if (!t) {
     return undefined;
    }
    return t.value;
   };
   e.prototype.set = function(e, t, n) {
    if (n === void 0) {
     n = r.None;
    }
    var i = this._map.get(e);
    if (i) {
     i.value = t;
     if (n !== r.None) {
      this.touch(i, n);
     }
    } else {
     i = {
      key: e,
      value: t,
      next: undefined,
      previous: undefined
     };
     switch (n) {
     case r.None:
      this.addItemLast(i);
      break;

     case r.First:
      this.addItemFirst(i);
      break;

     case r.Last:
      this.addItemLast(i);
      break;

     default:
      this.addItemLast(i);
      break;
     }
     this._map.set(e, i);
     this._size++;
    }
   };
   e.prototype.delete = function(e) {
    var t = this._map.get(e);
    if (!t) {
     return false;
    }
    this._map.delete(e);
    this.removeItem(t);
    this._size--;
    return true;
   };
   e.prototype.shift = function() {
    if (!this._head && !this._tail) {
     return undefined;
    }
    if (!this._head || !this._tail) {
     throw new Error("Invalid list");
    }
    var e = this._head;
    this._map.delete(e.key);
    this.removeItem(e);
    this._size--;
    return e.value;
   };
   e.prototype.forEach = function(e, t) {
    var n = this._head;
    while (n) {
     if (t) {
      e.bind(t)(n.value, n.key, this);
     } else {
      e(n.value, n.key, this);
     }
     n = n.next;
    }
   };
   e.prototype.forEachReverse = function(e, t) {
    var n = this._tail;
    while (n) {
     if (t) {
      e.bind(t)(n.value, n.key, this);
     } else {
      e(n.value, n.key, this);
     }
     n = n.previous;
    }
   };
   e.prototype.values = function() {
    var e = [];
    var t = this._head;
    while (t) {
     e.push(t.value);
     t = t.next;
    }
    return e;
   };
   e.prototype.keys = function() {
    var e = [];
    var t = this._head;
    while (t) {
     e.push(t.key);
     t = t.next;
    }
    return e;
   };
   e.prototype.addItemFirst = function(e) {
    if (!this._head && !this._tail) {
     this._tail = e;
    } else if (!this._head) {
     throw new Error("Invalid list");
    } else {
     e.next = this._head;
     this._head.previous = e;
    }
    this._head = e;
   };
   e.prototype.addItemLast = function(e) {
    if (!this._head && !this._tail) {
     this._head = e;
    } else if (!this._tail) {
     throw new Error("Invalid list");
    } else {
     e.previous = this._tail;
     this._tail.next = e;
    }
    this._tail = e;
   };
   e.prototype.removeItem = function(e) {
    if (e === this._head && e === this._tail) {
     this._head = undefined;
     this._tail = undefined;
    } else if (e === this._head) {
     this._head = e.next;
    } else if (e === this._tail) {
     this._tail = e.previous;
    } else {
     var t = e.next;
     var n = e.previous;
     if (!t || !n) {
      throw new Error("Invalid list");
     }
     t.previous = n;
     n.next = t;
    }
   };
   e.prototype.touch = function(e, t) {
    if (!this._head || !this._tail) {
     throw new Error("Invalid list");
    }
    if (t !== r.First && t !== r.Last) {
     return;
    }
    if (t === r.First) {
     if (e === this._head) {
      return;
     }
     var n = e.next;
     var i = e.previous;
     if (e === this._tail) {
      i.next = undefined;
      this._tail = i;
     } else {
      n.previous = i;
      i.next = n;
     }
     e.previous = undefined;
     e.next = this._head;
     this._head.previous = e;
     this._head = e;
    } else if (t === r.Last) {
     if (e === this._tail) {
      return;
     }
     var n = e.next;
     var i = e.previous;
     if (e === this._head) {
      n.previous = undefined;
      this._head = n;
     } else {
      n.previous = i;
      i.next = n;
     }
     e.next = undefined;
     e.previous = this._tail;
     this._tail.next = e;
     this._tail = e;
    }
   };
   return e;
  }();
  t.LinkedMap = i;
 },
 "8ahE": function(e, t, n) {
  "use strict";
  Object.defineProperty(t, "__esModule", {
   value: true
  });
  const r = n("C+6V");
  var i;
  (function(e) {
   e.type = new r.RequestType("textDocument/typeDefinition");
  })(i = t.TypeDefinitionRequest || (t.TypeDefinitionRequest = {}));
 },
 ALIN: function(e, t, n) {
  "use strict";
  Object.defineProperty(t, "__esModule", {
   value: true
  });
  var r = n("Qs2e");
  var i = n("uWpP");
  var o = n("vIUA");
  function s(e, t) {
   if (t === void 0) {
    t = "utf-8";
   }
   var n;
   var s = new Promise(function(e, t) {
    n = e;
   });
   return new Promise(function(a, u) {
    var c = r.createServer(function(e) {
     c.close();
     n([ new i.SocketMessageReader(e, t), new o.SocketMessageWriter(e, t) ]);
    });
    c.on("error", u);
    c.listen(e, "127.0.0.1", function() {
     c.removeListener("error", u);
     a({
      onConnected: function() {
       return s;
      }
     });
    });
   });
  }
  t.createClientSocketTransport = s;
  function a(e, t) {
   if (t === void 0) {
    t = "utf-8";
   }
   var n = r.createConnection(e, "127.0.0.1");
   return [ new i.SocketMessageReader(n, t), new o.SocketMessageWriter(n, t) ];
  }
  t.createServerSocketTransport = a;
 },
 BOov: function(e, t, n) {
  "use strict";
  function r(e) {
   for (var n in e) if (!t.hasOwnProperty(n)) t[n] = e[n];
  }
  Object.defineProperty(t, "__esModule", {
   value: true
  });
  const i = n("C+6V");
  t.ErrorCodes = i.ErrorCodes;
  t.ResponseError = i.ResponseError;
  t.CancellationToken = i.CancellationToken;
  t.CancellationTokenSource = i.CancellationTokenSource;
  t.Disposable = i.Disposable;
  t.Event = i.Event;
  t.Emitter = i.Emitter;
  t.Trace = i.Trace;
  t.SetTraceNotification = i.SetTraceNotification;
  t.LogTraceNotification = i.LogTraceNotification;
  t.RequestType = i.RequestType;
  t.RequestType0 = i.RequestType0;
  t.NotificationType = i.NotificationType;
  t.NotificationType0 = i.NotificationType0;
  t.MessageReader = i.MessageReader;
  t.MessageWriter = i.MessageWriter;
  t.ConnectionStrategy = i.ConnectionStrategy;
  t.StreamMessageReader = i.StreamMessageReader;
  t.StreamMessageWriter = i.StreamMessageWriter;
  t.IPCMessageReader = i.IPCMessageReader;
  t.IPCMessageWriter = i.IPCMessageWriter;
  t.createClientPipeTransport = i.createClientPipeTransport;
  t.createServerPipeTransport = i.createServerPipeTransport;
  t.generateRandomPipeName = i.generateRandomPipeName;
  t.createClientSocketTransport = i.createClientSocketTransport;
  t.createServerSocketTransport = i.createServerSocketTransport;
  r(n("kmEW"));
  r(n("+cRy"));
  function o(e, t, n, r) {
   return i.createMessageConnection(e, t, n, r);
  }
  t.createProtocolConnection = o;
 },
 "C+6V": function(e, t, n) {
  "use strict";
  var r = this && this.__extends || function() {
   var e = Object.setPrototypeOf || {
    __proto__: []
   } instanceof Array && function(e, t) {
    e.__proto__ = t;
   } || function(e, t) {
    for (var n in t) if (t.hasOwnProperty(n)) e[n] = t[n];
   };
   return function(t, n) {
    e(t, n);
    function r() {
     this.constructor = t;
    }
    t.prototype = n === null ? Object.create(n) : (r.prototype = n.prototype, new r());
   };
  }();
  function i(e) {
   for (var n in e) if (!t.hasOwnProperty(n)) t[n] = e[n];
  }
  Object.defineProperty(t, "__esModule", {
   value: true
  });
  var o = n("1vg8");
  var s = n("/7TX");
  t.RequestType = s.RequestType;
  t.RequestType0 = s.RequestType0;
  t.RequestType1 = s.RequestType1;
  t.RequestType2 = s.RequestType2;
  t.RequestType3 = s.RequestType3;
  t.RequestType4 = s.RequestType4;
  t.RequestType5 = s.RequestType5;
  t.RequestType6 = s.RequestType6;
  t.RequestType7 = s.RequestType7;
  t.RequestType8 = s.RequestType8;
  t.RequestType9 = s.RequestType9;
  t.ResponseError = s.ResponseError;
  t.ErrorCodes = s.ErrorCodes;
  t.NotificationType = s.NotificationType;
  t.NotificationType0 = s.NotificationType0;
  t.NotificationType1 = s.NotificationType1;
  t.NotificationType2 = s.NotificationType2;
  t.NotificationType3 = s.NotificationType3;
  t.NotificationType4 = s.NotificationType4;
  t.NotificationType5 = s.NotificationType5;
  t.NotificationType6 = s.NotificationType6;
  t.NotificationType7 = s.NotificationType7;
  t.NotificationType8 = s.NotificationType8;
  t.NotificationType9 = s.NotificationType9;
  var a = n("uWpP");
  t.MessageReader = a.MessageReader;
  t.StreamMessageReader = a.StreamMessageReader;
  t.IPCMessageReader = a.IPCMessageReader;
  t.SocketMessageReader = a.SocketMessageReader;
  var u = n("vIUA");
  t.MessageWriter = u.MessageWriter;
  t.StreamMessageWriter = u.StreamMessageWriter;
  t.IPCMessageWriter = u.IPCMessageWriter;
  t.SocketMessageWriter = u.SocketMessageWriter;
  var c = n("Z5Ki");
  t.Disposable = c.Disposable;
  t.Event = c.Event;
  t.Emitter = c.Emitter;
  var f = n("Ff8q");
  t.CancellationTokenSource = f.CancellationTokenSource;
  t.CancellationToken = f.CancellationToken;
  var l = n("4Wfv");
  i(n("qL5x"));
  i(n("ALIN"));
  var d;
  (function(e) {
   e.type = new s.NotificationType("$/cancelRequest");
  })(d || (d = {}));
  t.NullLogger = Object.freeze({
   error: function() {},
   warn: function() {},
   info: function() {},
   log: function() {}
  });
  var p;
  (function(e) {
   e[e["Off"] = 0] = "Off";
   e[e["Messages"] = 1] = "Messages";
   e[e["Verbose"] = 2] = "Verbose";
  })(p = t.Trace || (t.Trace = {}));
  (function(e) {
   function t(t) {
    t = t.toLowerCase();
    switch (t) {
    case "off":
     return e.Off;

    case "messages":
     return e.Messages;

    case "verbose":
     return e.Verbose;

    default:
     return e.Off;
    }
   }
   e.fromString = t;
   function n(t) {
    switch (t) {
    case e.Off:
     return "off";

    case e.Messages:
     return "messages";

    case e.Verbose:
     return "verbose";

    default:
     return "off";
    }
   }
   e.toString = n;
  })(p = t.Trace || (t.Trace = {}));
  var h;
  (function(e) {
   e.type = new s.NotificationType("$/setTraceNotification");
  })(h = t.SetTraceNotification || (t.SetTraceNotification = {}));
  var g;
  (function(e) {
   e.type = new s.NotificationType("$/logTraceNotification");
  })(g = t.LogTraceNotification || (t.LogTraceNotification = {}));
  var v;
  (function(e) {
   e[e["Closed"] = 1] = "Closed";
   e[e["Disposed"] = 2] = "Disposed";
   e[e["AlreadyListening"] = 3] = "AlreadyListening";
  })(v = t.ConnectionErrors || (t.ConnectionErrors = {}));
  var m = function(e) {
   r(t, e);
   function t(n, r) {
    var i = e.call(this, r) || this;
    i.code = n;
    Object.setPrototypeOf(i, t.prototype);
    return i;
   }
   return t;
  }(Error);
  t.ConnectionError = m;
  var y;
  (function(e) {
   function t(e) {
    var t = e;
    return t && o.func(t.cancelUndispatched);
   }
   e.is = t;
  })(y = t.ConnectionStrategy || (t.ConnectionStrategy = {}));
  var _;
  (function(e) {
   e[e["New"] = 1] = "New";
   e[e["Listening"] = 2] = "Listening";
   e[e["Closed"] = 3] = "Closed";
   e[e["Disposed"] = 4] = "Disposed";
  })(_ || (_ = {}));
  function b(e, t, n, r) {
   var i = 0;
   var a = 0;
   var u = 0;
   var y = "2.0";
   var b = undefined;
   var w = Object.create(null);
   var R = undefined;
   var C = Object.create(null);
   var T;
   var x = new l.LinkedMap();
   var q = Object.create(null);
   var S = Object.create(null);
   var k = p.Off;
   var E;
   var D = _.New;
   var M = new c.Emitter();
   var N = new c.Emitter();
   var O = new c.Emitter();
   var P = new c.Emitter();
   function j(e) {
    return "req-" + e.toString();
   }
   function W(e) {
    if (e === null) {
     return "res-unknown-" + (++u).toString();
    } else {
     return "res-" + e.toString();
    }
   }
   function F() {
    return "not-" + (++a).toString();
   }
   function I(e, t) {
    if (s.isRequestMessage(t)) {
     e.set(j(t.id), t);
    } else if (s.isResponseMessage(t)) {
     e.set(W(t.id), t);
    } else {
     e.set(F(), t);
    }
   }
   function L(e) {
    return undefined;
   }
   function A() {
    return D === _.Listening;
   }
   function H() {
    return D === _.Closed;
   }
   function z() {
    return D === _.Disposed;
   }
   function U() {
    if (D === _.New || D === _.Listening) {
     D = _.Closed;
     N.fire(undefined);
    }
   }
   function $(e) {
    M.fire([ e, undefined, undefined ]);
   }
   function K(e) {
    M.fire(e);
   }
   e.onClose(U);
   e.onError($);
   t.onClose(U);
   t.onError(K);
   function V() {
    if (T || x.size === 0) {
     return;
    }
    T = setImmediate(function() {
     T = undefined;
     B();
    });
   }
   function B() {
    if (x.size === 0) {
     return;
    }
    var e = x.shift();
    try {
     if (s.isRequestMessage(e)) {
      G(e);
     } else if (s.isNotificationMessage(e)) {
      Q(e);
     } else if (s.isResponseMessage(e)) {
      Z(e);
     } else {
      Y(e);
     }
    } finally {
     V();
    }
   }
   var J = function(e) {
    try {
     if (s.isNotificationMessage(e) && e.method === d.type.method) {
      var n = j(e.params.id);
      var i = x.get(n);
      if (s.isRequestMessage(i)) {
       var o = r && r.cancelUndispatched ? r.cancelUndispatched(i, L) : L(i);
       if (o && (o.error !== void 0 || o.result !== void 0)) {
        x.delete(n);
        o.id = i.id;
        te(o, e.method, Date.now());
        t.write(o);
        return;
       }
      }
     }
     I(x, e);
    } finally {
     V();
    }
   };
   function G(e) {
    if (z()) {
     return;
    }
    function n(n, r, i) {
     var o = {
      jsonrpc: y,
      id: e.id
     };
     if (n instanceof s.ResponseError) {
      o.error = n.toJson();
     } else {
      o.result = n === void 0 ? null : n;
     }
     te(o, r, i);
     t.write(o);
    }
    function r(n, r, i) {
     var o = {
      jsonrpc: y,
      id: e.id,
      error: n.toJson()
     };
     te(o, r, i);
     t.write(o);
    }
    function i(n, r, i) {
     if (n === void 0) {
      n = null;
     }
     var o = {
      jsonrpc: y,
      id: e.id,
      result: n
     };
     te(o, r, i);
     t.write(o);
    }
    ne(e);
    var a = w[e.method];
    var u;
    var c;
    if (a) {
     u = a.type;
     c = a.handler;
    }
    var l = Date.now();
    if (c || b) {
     var d = new f.CancellationTokenSource();
     var p = String(e.id);
     S[p] = d;
     try {
      var h = void 0;
      if (e.params === void 0 || u !== void 0 && u.numberOfParams === 0) {
       h = c ? c(d.token) : b(e.method, d.token);
      } else if (o.array(e.params) && (u === void 0 || u.numberOfParams > 1)) {
       h = c ? c.apply(void 0, e.params.concat([ d.token ])) : b.apply(void 0, [ e.method ].concat(e.params, [ d.token ]));
      } else {
       h = c ? c(e.params, d.token) : b(e.method, e.params, d.token);
      }
      var g = h;
      if (!h) {
       delete S[p];
       i(h, e.method, l);
      } else if (g.then) {
       g.then(function(t) {
        delete S[p];
        n(t, e.method, l);
       }, function(t) {
        delete S[p];
        if (t instanceof s.ResponseError) {
         r(t, e.method, l);
        } else if (t && o.string(t.message)) {
         r(new s.ResponseError(s.ErrorCodes.InternalError, "Request " + e.method + " failed with message: " + t.message), e.method, l);
        } else {
         r(new s.ResponseError(s.ErrorCodes.InternalError, "Request " + e.method + " failed unexpectedly without providing any details."), e.method, l);
        }
       });
      } else {
       delete S[p];
       n(h, e.method, l);
      }
     } catch (t) {
      delete S[p];
      if (t instanceof s.ResponseError) {
       n(t, e.method, l);
      } else if (t && o.string(t.message)) {
       r(new s.ResponseError(s.ErrorCodes.InternalError, "Request " + e.method + " failed with message: " + t.message), e.method, l);
      } else {
       r(new s.ResponseError(s.ErrorCodes.InternalError, "Request " + e.method + " failed unexpectedly without providing any details."), e.method, l);
      }
     }
    } else {
     r(new s.ResponseError(s.ErrorCodes.MethodNotFound, "Unhandled method " + e.method), e.method, l);
    }
   }
   function Z(e) {
    if (z()) {
     return;
    }
    if (e.id === null) {
     if (e.error) {
      n.error("Received response message without id: Error is: \n" + JSON.stringify(e.error, undefined, 4));
     } else {
      n.error("Received response message without id. No further error information provided.");
     }
    } else {
     var t = String(e.id);
     var r = q[t];
     ie(e, r);
     if (r) {
      delete q[t];
      try {
       if (e.error) {
        var i = e.error;
        r.reject(new s.ResponseError(i.code, i.message, i.data));
       } else if (e.result !== void 0) {
        r.resolve(e.result);
       } else {
        throw new Error("Should never happen.");
       }
      } catch (i) {
       if (i.message) {
        n.error("Response handler '" + r.method + "' failed with message: " + i.message);
       } else {
        n.error("Response handler '" + r.method + "' failed unexpectedly.");
       }
      }
     }
    }
   }
   function Q(e) {
    if (z()) {
     return;
    }
    var t = undefined;
    var r;
    if (e.method === d.type.method) {
     r = function(e) {
      var t = e.id;
      var n = S[String(t)];
      if (n) {
       n.cancel();
      }
     };
    } else {
     var i = C[e.method];
     if (i) {
      r = i.handler;
      t = i.type;
     }
    }
    if (r || R) {
     try {
      re(e);
      if (e.params === void 0 || t !== void 0 && t.numberOfParams === 0) {
       r ? r() : R(e.method);
      } else if (o.array(e.params) && (t === void 0 || t.numberOfParams > 1)) {
       r ? r.apply(void 0, e.params) : R.apply(void 0, [ e.method ].concat(e.params));
      } else {
       r ? r(e.params) : R(e.method, e.params);
      }
     } catch (t) {
      if (t.message) {
       n.error("Notification handler '" + e.method + "' failed with message: " + t.message);
      } else {
       n.error("Notification handler '" + e.method + "' failed unexpectedly.");
      }
     }
    } else {
     O.fire(e);
    }
   }
   function Y(e) {
    if (!e) {
     n.error("Received empty message.");
     return;
    }
    n.error("Received message which is neither a response nor a notification message:\n" + JSON.stringify(e, null, 4));
    var t = e;
    if (o.string(t.id) || o.number(t.id)) {
     var r = String(t.id);
     var i = q[r];
     if (i) {
      i.reject(new Error("The received response has neither a result nor an error property."));
     }
    }
   }
   function X(e) {
    if (k === p.Off || !E) {
     return;
    }
    var t = undefined;
    if (k === p.Verbose && e.params) {
     t = "Params: " + JSON.stringify(e.params, null, 4) + "\n\n";
    }
    E.log("Sending request '" + e.method + " - (" + e.id + ")'.", t);
   }
   function ee(e) {
    if (k === p.Off || !E) {
     return;
    }
    var t = undefined;
    if (k === p.Verbose) {
     if (e.params) {
      t = "Params: " + JSON.stringify(e.params, null, 4) + "\n\n";
     } else {
      t = "No parameters provided.\n\n";
     }
    }
    E.log("Sending notification '" + e.method + "'.", t);
   }
   function te(e, t, n) {
    if (k === p.Off || !E) {
     return;
    }
    var r = undefined;
    if (k === p.Verbose) {
     if (e.error && e.error.data) {
      r = "Error data: " + JSON.stringify(e.error.data, null, 4) + "\n\n";
     } else {
      if (e.result) {
       r = "Result: " + JSON.stringify(e.result, null, 4) + "\n\n";
      } else if (e.error === void 0) {
       r = "No result returned.\n\n";
      }
     }
    }
    E.log("Sending response '" + t + " - (" + e.id + ")'. Processing request took " + (Date.now() - n) + "ms", r);
   }
   function ne(e) {
    if (k === p.Off || !E) {
     return;
    }
    var t = undefined;
    if (k === p.Verbose && e.params) {
     t = "Params: " + JSON.stringify(e.params, null, 4) + "\n\n";
    }
    E.log("Received request '" + e.method + " - (" + e.id + ")'.", t);
   }
   function re(e) {
    if (k === p.Off || !E || e.method === g.type.method) {
     return;
    }
    var t = undefined;
    if (k === p.Verbose) {
     if (e.params) {
      t = "Params: " + JSON.stringify(e.params, null, 4) + "\n\n";
     } else {
      t = "No parameters provided.\n\n";
     }
    }
    E.log("Received notification '" + e.method + "'.", t);
   }
   function ie(e, t) {
    if (k === p.Off || !E) {
     return;
    }
    var n = undefined;
    if (k === p.Verbose) {
     if (e.error && e.error.data) {
      n = "Error data: " + JSON.stringify(e.error.data, null, 4) + "\n\n";
     } else {
      if (e.result) {
       n = "Result: " + JSON.stringify(e.result, null, 4) + "\n\n";
      } else if (e.error === void 0) {
       n = "No result returned.\n\n";
      }
     }
    }
    if (t) {
     var r = e.error ? " Request failed: " + e.error.message + " (" + e.error.code + ")." : "";
     E.log("Received response '" + t.method + " - (" + e.id + ")' in " + (Date.now() - t.timerStart) + "ms." + r, n);
    } else {
     E.log("Received response " + e.id + " without active response promise.", n);
    }
   }
   function oe() {
    if (H()) {
     throw new m(v.Closed, "Connection is closed.");
    }
    if (z()) {
     throw new m(v.Disposed, "Connection is disposed.");
    }
   }
   function se() {
    if (A()) {
     throw new m(v.AlreadyListening, "Connection is already listening");
    }
   }
   function ae() {
    if (!A()) {
     throw new Error("Call listen() first.");
    }
   }
   function ue(e) {
    if (e === void 0) {
     return null;
    } else {
     return e;
    }
   }
   function ce(e, t) {
    var n;
    var r = e.numberOfParams;
    switch (r) {
    case 0:
     n = null;
     break;

    case 1:
     n = ue(t[0]);
     break;

    default:
     n = [];
     for (var i = 0; i < t.length && i < r; i++) {
      n.push(ue(t[i]));
     }
     if (t.length < r) {
      for (var i = t.length; i < r; i++) {
       n.push(null);
      }
     }
     break;
    }
    return n;
   }
   var fe = {
    sendNotification: function(e) {
     var n = [];
     for (var r = 1; r < arguments.length; r++) {
      n[r - 1] = arguments[r];
     }
     oe();
     var i;
     var s;
     if (o.string(e)) {
      i = e;
      switch (n.length) {
      case 0:
       s = null;
       break;

      case 1:
       s = n[0];
       break;

      default:
       s = n;
       break;
      }
     } else {
      i = e.method;
      s = ce(e, n);
     }
     var a = {
      jsonrpc: y,
      method: i,
      params: s
     };
     ee(a);
     t.write(a);
    },
    onNotification: function(e, t) {
     oe();
     if (o.func(e)) {
      R = e;
     } else if (t) {
      if (o.string(e)) {
       C[e] = {
        type: undefined,
        handler: t
       };
      } else {
       C[e.method] = {
        type: e,
        handler: t
       };
      }
     }
    },
    sendRequest: function(e) {
     var n = [];
     for (var r = 1; r < arguments.length; r++) {
      n[r - 1] = arguments[r];
     }
     oe();
     ae();
     var a;
     var u;
     var c = undefined;
     if (o.string(e)) {
      a = e;
      switch (n.length) {
      case 0:
       u = null;
       break;

      case 1:
       if (f.CancellationToken.is(n[0])) {
        u = null;
        c = n[0];
       } else {
        u = ue(n[0]);
       }
       break;

      default:
       var l = n.length - 1;
       if (f.CancellationToken.is(n[l])) {
        c = n[l];
        if (n.length === 2) {
         u = ue(n[0]);
        } else {
         u = n.slice(0, l).map(function(e) {
          return ue(e);
         });
        }
       } else {
        u = n.map(function(e) {
         return ue(e);
        });
       }
       break;
      }
     } else {
      a = e.method;
      u = ce(e, n);
      var p = e.numberOfParams;
      c = f.CancellationToken.is(n[p]) ? n[p] : undefined;
     }
     var h = i++;
     var g = new Promise(function(e, n) {
      var r = {
       jsonrpc: y,
       id: h,
       method: a,
       params: u
      };
      var i = {
       method: a,
       timerStart: Date.now(),
       resolve: e,
       reject: n
      };
      X(r);
      try {
       t.write(r);
      } catch (e) {
       i.reject(new s.ResponseError(s.ErrorCodes.MessageWriteError, e.message ? e.message : "Unknown reason"));
       i = null;
      }
      if (i) {
       q[String(h)] = i;
      }
     });
     if (c) {
      c.onCancellationRequested(function() {
       fe.sendNotification(d.type, {
        id: h
       });
      });
     }
     return g;
    },
    onRequest: function(e, t) {
     oe();
     if (o.func(e)) {
      b = e;
     } else if (t) {
      if (o.string(e)) {
       w[e] = {
        type: undefined,
        handler: t
       };
      } else {
       w[e.method] = {
        type: e,
        handler: t
       };
      }
     }
    },
    trace: function(e, t, n) {
     if (n === void 0) {
      n = false;
     }
     k = e;
     if (k === p.Off) {
      E = undefined;
     } else {
      E = t;
     }
     if (n && !H() && !z()) {
      fe.sendNotification(h.type, {
       value: p.toString(e)
      });
     }
    },
    onError: M.event,
    onClose: N.event,
    onUnhandledNotification: O.event,
    onDispose: P.event,
    dispose: function() {
     if (z()) {
      return;
     }
     D = _.Disposed;
     P.fire(undefined);
     var n = new Error("Connection got disposed.");
     Object.keys(q).forEach(function(e) {
      q[e].reject(n);
     });
     q = Object.create(null);
     S = Object.create(null);
     x = new l.LinkedMap();
     if (o.func(t.dispose)) {
      t.dispose();
     }
     if (o.func(e.dispose)) {
      e.dispose();
     }
    },
    listen: function() {
     oe();
     se();
     D = _.Listening;
     e.listen(J);
    },
    inspect: function() {
     console.log("inspect");
    }
   };
   fe.onNotification(g.type, function(e) {
    if (k === p.Off || !E) {
     return;
    }
    E.log(e.message, k === p.Verbose ? e.verbose : undefined);
   });
   return fe;
  }
  function w(e) {
   return e.listen !== void 0 && e.read === void 0;
  }
  function R(e) {
   return e.write !== void 0 && e.end === void 0;
  }
  function C(e, n, r, i) {
   if (!r) {
    r = t.NullLogger;
   }
   var o = w(e) ? e : new a.StreamMessageReader(e);
   var s = R(n) ? n : new u.StreamMessageWriter(n);
   return b(o, s, r, i);
  }
  t.createMessageConnection = C;
 },
 COhr: function(e, t, n) {
  "use strict";
  function r(e) {
   for (var n in e) if (!t.hasOwnProperty(n)) t[n] = e[n];
  }
  Object.defineProperty(t, "__esModule", {
   value: true
  });
  const i = n("BOov");
  t.Event = i.Event;
  const o = n("Qhc/");
  const s = n("Jf2r");
  const a = n("Krw1");
  const u = n("mz6j");
  r(n("BOov"));
  const c = n("tGke");
  var f;
  (function(e) {
   e.uriToFilePath = c.uriToFilePath;
   e.resolveGlobalNodePath = c.resolveGlobalNodePath;
   e.resolveGlobalYarnPath = c.resolveGlobalYarnPath;
   e.resolve = c.resolve;
   e.resolveModule = c.resolveModule;
   e.resolveModule2 = c.resolveModule2;
   e.resolveModulePath = c.resolveModulePath;
  })(f = t.Files || (t.Files = {}));
  let l = false;
  let d = undefined;
  function p() {
   const e = "--clientProcessId";
   function t(e) {
    try {
     let t = parseInt(e);
     if (!isNaN(t)) {
      d = setInterval(() => {
       try {
        process.kill(t, 0);
       } catch (e) {
        process.exit(l ? 0 : 1);
       }
      }, 3e3);
     }
    } catch (e) {}
   }
   for (let n = 2; n < process.argv.length; n++) {
    let r = process.argv[n];
    if (r === e && n + 1 < process.argv.length) {
     t(process.argv[n + 1]);
     return;
    } else {
     let n = r.split("=");
     if (n[0] === e) {
      t(n[1]);
     }
    }
   }
  }
  p();
  function h(e) {
   if (e === null) {
    return void 0;
   }
   return e;
  }
  class g {
   constructor() {
    this._documents = Object.create(null);
    this._onDidChangeContent = new i.Emitter();
    this._onDidOpen = new i.Emitter();
    this._onDidClose = new i.Emitter();
    this._onDidSave = new i.Emitter();
    this._onWillSave = new i.Emitter();
   }
   get syncKind() {
    return i.TextDocumentSyncKind.Full;
   }
   get onDidChangeContent() {
    return this._onDidChangeContent.event;
   }
   get onDidOpen() {
    return this._onDidOpen.event;
   }
   get onWillSave() {
    return this._onWillSave.event;
   }
   onWillSaveWaitUntil(e) {
    this._willSaveWaitUntil = e;
   }
   get onDidSave() {
    return this._onDidSave.event;
   }
   get onDidClose() {
    return this._onDidClose.event;
   }
   get(e) {
    return this._documents[e];
   }
   all() {
    return Object.keys(this._documents).map(e => this._documents[e]);
   }
   keys() {
    return Object.keys(this._documents);
   }
   listen(e) {
    function t(e) {
     return a.func(e.update);
    }
    e.__textDocumentSync = i.TextDocumentSyncKind.Full;
    e.onDidOpenTextDocument(e => {
     let t = e.textDocument;
     let n = i.TextDocument.create(t.uri, t.languageId, t.version, t.text);
     this._documents[t.uri] = n;
     let r = Object.freeze({
      document: n
     });
     this._onDidOpen.fire(r);
     this._onDidChangeContent.fire(r);
    });
    e.onDidChangeTextDocument(e => {
     let n = e.textDocument;
     let r = e.contentChanges;
     let i = r.length > 0 ? r[r.length - 1] : undefined;
     if (i) {
      let e = this._documents[n.uri];
      if (e && t(e)) {
       if (n.version === null || n.version === void 0) {
        throw new Error(`Recevied document change event for ${n.uri} without valid version identifier`);
       }
       e.update(i, n.version);
       this._onDidChangeContent.fire(Object.freeze({
        document: e
       }));
      }
     }
    });
    e.onDidCloseTextDocument(e => {
     let t = this._documents[e.textDocument.uri];
     if (t) {
      delete this._documents[e.textDocument.uri];
      this._onDidClose.fire(Object.freeze({
       document: t
      }));
     }
    });
    e.onWillSaveTextDocument(e => {
     let t = this._documents[e.textDocument.uri];
     if (t) {
      this._onWillSave.fire(Object.freeze({
       document: t,
       reason: e.reason
      }));
     }
    });
    e.onWillSaveTextDocumentWaitUntil((e, t) => {
     let n = this._documents[e.textDocument.uri];
     if (n && this._willSaveWaitUntil) {
      return this._willSaveWaitUntil(Object.freeze({
       document: n,
       reason: e.reason
      }), t);
     } else {
      return [];
     }
    });
    e.onDidSaveTextDocument(e => {
     let t = this._documents[e.textDocument.uri];
     if (t) {
      this._onDidSave.fire(Object.freeze({
       document: t
      }));
     }
    });
   }
  }
  t.TextDocuments = g;
  class v {
   constructor() {
    this._messages = Object.create(null);
   }
   add(e) {
    let t = this._messages[e];
    if (!t) {
     t = 0;
    }
    t++;
    this._messages[e] = t;
   }
   sendErrors(e) {
    Object.keys(this._messages).forEach(t => {
     e.window.showErrorMessage(t);
    });
   }
  }
  t.ErrorMessageTracker = v;
  var m;
  (function(e) {
   function t() {
    return new y();
   }
   e.create = t;
  })(m = t.BulkRegistration || (t.BulkRegistration = {}));
  class y {
   constructor() {
    this._registrations = [];
    this._registered = new Set();
   }
   add(e, t) {
    const n = a.string(e) ? e : e.method;
    if (this._registered.has(n)) {
     throw new Error(`${n} is already added to this registration`);
    }
    const r = u.generateUuid();
    this._registrations.push({
     id: r,
     method: n,
     registerOptions: t || {}
    });
    this._registered.add(n);
   }
   asRegistrationParams() {
    return {
     registrations: this._registrations
    };
   }
  }
  var _;
  (function(e) {
   function t() {
    return new b(undefined, []);
   }
   e.create = t;
  })(_ = t.BulkUnregistration || (t.BulkUnregistration = {}));
  class b {
   constructor(e, t) {
    this._connection = e;
    this._unregistrations = new Map();
    t.forEach(e => {
     this._unregistrations.set(e.method, e);
    });
   }
   get isAttached() {
    return !!this._connection;
   }
   attach(e) {
    this._connection = e;
   }
   add(e) {
    this._unregistrations.set(e.method, e);
   }
   dispose() {
    let e = [];
    for (let t of this._unregistrations.values()) {
     e.push(t);
    }
    let t = {
     unregisterations: e
    };
    this._connection.sendRequest(i.UnregistrationRequest.type, t).then(undefined, e => {
     this._connection.console.info(`Bulk unregistration failed.`);
    });
   }
   disposeSingle(e) {
    const t = a.string(e) ? e : e.method;
    const n = this._unregistrations.get(t);
    if (!n) {
     return false;
    }
    let r = {
     unregisterations: [ n ]
    };
    this._connection.sendRequest(i.UnregistrationRequest.type, r).then(() => {
     this._unregistrations.delete(t);
    }, e => {
     this._connection.console.info(`Unregistering request handler for ${n.id} failed.`);
    });
    return true;
   }
  }
  class w {
   constructor() {}
   rawAttach(e) {
    this._rawConnection = e;
   }
   attach(e) {
    this._connection = e;
   }
   get connection() {
    if (!this._connection) {
     throw new Error("Remote is not attached to a connection yet.");
    }
    return this._connection;
   }
   fillServerCapabilities(e) {}
   initialize(e) {}
   error(e) {
    this.send(i.MessageType.Error, e);
   }
   warn(e) {
    this.send(i.MessageType.Warning, e);
   }
   info(e) {
    this.send(i.MessageType.Info, e);
   }
   log(e) {
    this.send(i.MessageType.Log, e);
   }
   send(e, t) {
    if (this._rawConnection) {
     this._rawConnection.sendNotification(i.LogMessageNotification.type, {
      type: e,
      message: t
     });
    }
   }
  }
  class R {
   constructor() {}
   attach(e) {
    this._connection = e;
   }
   get connection() {
    if (!this._connection) {
     throw new Error("Remote is not attached to a connection yet.");
    }
    return this._connection;
   }
   initialize(e) {}
   fillServerCapabilities(e) {}
   showErrorMessage(e, ...t) {
    let n = {
     type: i.MessageType.Error,
     message: e,
     actions: t
    };
    return this._connection.sendRequest(i.ShowMessageRequest.type, n).then(h);
   }
   showWarningMessage(e, ...t) {
    let n = {
     type: i.MessageType.Warning,
     message: e,
     actions: t
    };
    return this._connection.sendRequest(i.ShowMessageRequest.type, n).then(h);
   }
   showInformationMessage(e, ...t) {
    let n = {
     type: i.MessageType.Info,
     message: e,
     actions: t
    };
    return this._connection.sendRequest(i.ShowMessageRequest.type, n).then(h);
   }
  }
  class C {
   attach(e) {
    this._connection = e;
   }
   get connection() {
    if (!this._connection) {
     throw new Error("Remote is not attached to a connection yet.");
    }
    return this._connection;
   }
   initialize(e) {}
   fillServerCapabilities(e) {}
   register(e, t, n) {
    if (e instanceof y) {
     return this.registerMany(e);
    } else if (e instanceof b) {
     return this.registerSingle1(e, t, n);
    } else {
     return this.registerSingle2(e, t);
    }
   }
   registerSingle1(e, t, n) {
    const r = a.string(t) ? t : t.method;
    const o = u.generateUuid();
    let s = {
     registrations: [ {
      id: o,
      method: r,
      registerOptions: n || {}
     } ]
    };
    if (!e.isAttached) {
     e.attach(this._connection);
    }
    return this._connection.sendRequest(i.RegistrationRequest.type, s).then(t => {
     e.add({
      id: o,
      method: r
     });
     return e;
    }, e => {
     this.connection.console.info(`Registering request handler for ${r} failed.`);
     return Promise.reject(e);
    });
   }
   registerSingle2(e, t) {
    const n = a.string(e) ? e : e.method;
    const r = u.generateUuid();
    let o = {
     registrations: [ {
      id: r,
      method: n,
      registerOptions: t || {}
     } ]
    };
    return this._connection.sendRequest(i.RegistrationRequest.type, o).then(e => {
     return i.Disposable.create(() => {
      this.unregisterSingle(r, n);
     });
    }, e => {
     this.connection.console.info(`Registering request handler for ${n} failed.`);
     return Promise.reject(e);
    });
   }
   unregisterSingle(e, t) {
    let n = {
     unregisterations: [ {
      id: e,
      method: t
     } ]
    };
    return this._connection.sendRequest(i.UnregistrationRequest.type, n).then(undefined, t => {
     this.connection.console.info(`Unregistering request handler for ${e} failed.`);
    });
   }
   registerMany(e) {
    let t = e.asRegistrationParams();
    return this._connection.sendRequest(i.RegistrationRequest.type, t).then(() => {
     return new b(this._connection, t.registrations.map(e => {
      return {
       id: e.id,
       method: e.method
      };
     }));
    }, e => {
     this.connection.console.info(`Bulk registration failed.`);
     return Promise.reject(e);
    });
   }
  }
  class T {
   constructor() {}
   attach(e) {
    this._connection = e;
   }
   get connection() {
    if (!this._connection) {
     throw new Error("Remote is not attached to a connection yet.");
    }
    return this._connection;
   }
   initialize(e) {}
   fillServerCapabilities(e) {}
   applyEdit(e) {
    function t(e) {
     return e && !!e.edit;
    }
    let n = t(e) ? e : {
     edit: e
    };
    return this._connection.sendRequest(i.ApplyWorkspaceEditRequest.type, n);
   }
  }
  const x = s.WorkspaceFoldersFeature(o.ConfigurationFeature(T));
  class q {
   constructor() {
    this._trace = i.Trace.Off;
   }
   attach(e) {
    this._connection = e;
   }
   get connection() {
    if (!this._connection) {
     throw new Error("Remote is not attached to a connection yet.");
    }
    return this._connection;
   }
   initialize(e) {}
   fillServerCapabilities(e) {}
   set trace(e) {
    this._trace = e;
   }
   log(e, t) {
    if (this._trace === i.Trace.Off) {
     return;
    }
    this._connection.sendNotification(i.LogTraceNotification.type, {
     message: e,
     verbose: this._trace === i.Trace.Verbose ? t : undefined
    });
   }
  }
  class S {
   constructor() {}
   attach(e) {
    this._connection = e;
   }
   get connection() {
    if (!this._connection) {
     throw new Error("Remote is not attached to a connection yet.");
    }
    return this._connection;
   }
   initialize(e) {}
   fillServerCapabilities(e) {}
   logEvent(e) {
    this._connection.sendNotification(i.TelemetryEventNotification.type, e);
   }
  }
  function k(e, t) {
   return function(n) {
    return t(e(n));
   };
  }
  t.combineConsoleFeatures = k;
  function E(e, t) {
   return function(n) {
    return t(e(n));
   };
  }
  t.combineTelemetryFeatures = E;
  function D(e, t) {
   return function(n) {
    return t(e(n));
   };
  }
  t.combineTracerFeatures = D;
  function M(e, t) {
   return function(n) {
    return t(e(n));
   };
  }
  t.combineClientFeatures = M;
  function N(e, t) {
   return function(n) {
    return t(e(n));
   };
  }
  t.combineWindowFeatures = N;
  function O(e, t) {
   return function(n) {
    return t(e(n));
   };
  }
  t.combineWorkspaceFeatures = O;
  function P(e, t) {
   function n(e, t, n) {
    if (e && t) {
     return n(e, t);
    } else if (e) {
     return e;
    } else {
     return t;
    }
   }
   let r = {
    __brand: "features",
    console: n(e.console, t.console, k),
    tracer: n(e.tracer, t.tracer, D),
    telemetry: n(e.telemetry, t.telemetry, E),
    client: n(e.client, t.client, M),
    window: n(e.window, t.window, N),
    workspace: n(e.workspace, t.workspace, O)
   };
   return r;
  }
  t.combineFeatures = P;
  function j(e, t, n, r) {
   let o;
   let s;
   let a;
   let u;
   if (e !== void 0 && e.__brand === "features") {
    o = e;
    e = t;
    t = n;
    n = r;
   }
   if (i.ConnectionStrategy.is(e)) {
    u = e;
   } else {
    s = e;
    a = t;
    u = n;
   }
   return W(s, a, u, o);
  }
  t.createConnection = j;
  function W(e, t, n, r) {
   if (!e && !t && process.argv.length > 2) {
    let n = void 0;
    let r = void 0;
    let s = process.argv.slice(2);
    for (let a = 0; a < s.length; a++) {
     let u = s[a];
     if (u === "--node-ipc") {
      e = new i.IPCMessageReader(process);
      t = new i.IPCMessageWriter(process);
      break;
     } else if (u === "--stdio") {
      e = process.stdin;
      t = process.stdout;
      break;
     } else if (u === "--socket") {
      n = parseInt(s[a + 1]);
      break;
     } else if (u === "--pipe") {
      r = s[a + 1];
      break;
     } else {
      var o = u.split("=");
      if (o[0] === "--socket") {
       n = parseInt(o[1]);
       break;
      } else if (o[0] === "--pipe") {
       r = o[1];
       break;
      }
     }
    }
    if (n) {
     let r = i.createServerSocketTransport(n);
     e = r[0];
     t = r[1];
    } else if (r) {
     let n = i.createServerPipeTransport(r);
     e = n[0];
     t = n[1];
    }
   }
   var s = "Use arguments of createConnection or set command line parameters: '--node-ipc', '--stdio' or '--socket={number}'";
   if (!e) {
    throw new Error("Connection input stream is not set. " + s);
   }
   if (!t) {
    throw new Error("Connection output stream is not set. " + s);
   }
   if (a.func(e.read) && a.func(e.on)) {
    let t = e;
    t.on("end", () => {
     process.exit(l ? 0 : 1);
    });
    t.on("close", () => {
     process.exit(l ? 0 : 1);
    });
   }
   const u = r && r.console ? new (r.console(w))() : new w();
   const c = i.createProtocolConnection(e, t, u, n);
   u.rawAttach(c);
   const f = r && r.tracer ? new (r.tracer(q))() : new q();
   const p = r && r.telemetry ? new (r.telemetry(S))() : new S();
   const h = r && r.client ? new (r.client(C))() : new C();
   const g = r && r.window ? new (r.window(R))() : new R();
   const v = r && r.workspace ? new (r.workspace(x))() : new x();
   const m = [ u, f, p, h, g, v ];
   function y(e) {
    if (a.thenable(e)) {
     return e;
    } else {
     return Promise.resolve(e);
    }
   }
   let _ = undefined;
   let b = undefined;
   let T = undefined;
   let k = {
    listen: () => c.listen(),
    sendRequest: (e, ...t) => c.sendRequest(a.string(e) ? e : e.method, ...t),
    onRequest: (e, t) => c.onRequest(e, t),
    sendNotification: (e, t) => {
     const n = a.string(e) ? e : e.method;
     if (arguments.length === 1) {
      c.sendNotification(n);
     } else {
      c.sendNotification(n, t);
     }
    },
    onNotification: (e, t) => c.onNotification(e, t),
    onInitialize: e => b = e,
    onInitialized: e => c.onNotification(i.InitializedNotification.type, e),
    onShutdown: e => _ = e,
    onExit: e => T = e,
    get console() {
     return u;
    },
    get telemetry() {
     return p;
    },
    get tracer() {
     return f;
    },
    get client() {
     return h;
    },
    get window() {
     return g;
    },
    get workspace() {
     return v;
    },
    onDidChangeConfiguration: e => c.onNotification(i.DidChangeConfigurationNotification.type, e),
    onDidChangeWatchedFiles: e => c.onNotification(i.DidChangeWatchedFilesNotification.type, e),
    __textDocumentSync: undefined,
    onDidOpenTextDocument: e => c.onNotification(i.DidOpenTextDocumentNotification.type, e),
    onDidChangeTextDocument: e => c.onNotification(i.DidChangeTextDocumentNotification.type, e),
    onDidCloseTextDocument: e => c.onNotification(i.DidCloseTextDocumentNotification.type, e),
    onWillSaveTextDocument: e => c.onNotification(i.WillSaveTextDocumentNotification.type, e),
    onWillSaveTextDocumentWaitUntil: e => c.onRequest(i.WillSaveTextDocumentWaitUntilRequest.type, e),
    onDidSaveTextDocument: e => c.onNotification(i.DidSaveTextDocumentNotification.type, e),
    sendDiagnostics: e => c.sendNotification(i.PublishDiagnosticsNotification.type, e),
    onHover: e => c.onRequest(i.HoverRequest.type, e),
    onCompletion: e => c.onRequest(i.CompletionRequest.type, e),
    onCompletionResolve: e => c.onRequest(i.CompletionResolveRequest.type, e),
    onSignatureHelp: e => c.onRequest(i.SignatureHelpRequest.type, e),
    onDefinition: e => c.onRequest(i.DefinitionRequest.type, e),
    onTypeDefinition: e => c.onRequest(i.TypeDefinitionRequest.type, e),
    onImplementation: e => c.onRequest(i.ImplementationRequest.type, e),
    onReferences: e => c.onRequest(i.ReferencesRequest.type, e),
    onDocumentHighlight: e => c.onRequest(i.DocumentHighlightRequest.type, e),
    onDocumentSymbol: e => c.onRequest(i.DocumentSymbolRequest.type, e),
    onWorkspaceSymbol: e => c.onRequest(i.WorkspaceSymbolRequest.type, e),
    onCodeAction: e => c.onRequest(i.CodeActionRequest.type, e),
    onCodeLens: e => c.onRequest(i.CodeLensRequest.type, e),
    onCodeLensResolve: e => c.onRequest(i.CodeLensResolveRequest.type, e),
    onDocumentFormatting: e => c.onRequest(i.DocumentFormattingRequest.type, e),
    onDocumentRangeFormatting: e => c.onRequest(i.DocumentRangeFormattingRequest.type, e),
    onDocumentOnTypeFormatting: e => c.onRequest(i.DocumentOnTypeFormattingRequest.type, e),
    onRenameRequest: e => c.onRequest(i.RenameRequest.type, e),
    onDocumentLinks: e => c.onRequest(i.DocumentLinkRequest.type, e),
    onDocumentLinkResolve: e => c.onRequest(i.DocumentLinkResolveRequest.type, e),
    onDocumentColor: e => c.onRequest(i.DocumentColorRequest.type, e),
    onColorPresentation: e => c.onRequest(i.ColorPresentationRequest.type, e),
    onExecuteCommand: e => c.onRequest(i.ExecuteCommandRequest.type, e),
    dispose: () => c.dispose()
   };
   for (let e of m) {
    e.attach(k);
   }
   c.onRequest(i.InitializeRequest.type, e => {
    if (a.number(e.processId) && d === void 0) {
     setInterval(() => {
      try {
       process.kill(e.processId, 0);
      } catch (e) {
       process.exit(l ? 0 : 1);
      }
     }, 3e3);
    }
    if (a.string(e.trace)) {
     f.trace = i.Trace.fromString(e.trace);
    }
    for (let t of m) {
     t.initialize(e.capabilities);
    }
    if (b) {
     let t = b(e, new i.CancellationTokenSource().token);
     return y(t).then(e => {
      if (e instanceof i.ResponseError) {
       return e;
      }
      let t = e;
      if (!t) {
       t = {
        capabilities: {}
       };
      }
      let n = t.capabilities;
      if (!n) {
       n = {};
       t.capabilities = n;
      }
      if (!n.textDocumentSync) {
       n.textDocumentSync = a.number(k.__textDocumentSync) ? k.__textDocumentSync : i.TextDocumentSyncKind.None;
      } else if (!a.number(n.textDocumentSync) && !a.number(n.textDocumentSync.change)) {
       n.textDocumentSync.change = a.number(k.__textDocumentSync) ? k.__textDocumentSync : i.TextDocumentSyncKind.None;
      }
      for (let e of m) {
       e.fillServerCapabilities(n);
      }
      return t;
     });
    } else {
     let e = {
      capabilities: {
       textDocumentSync: i.TextDocumentSyncKind.None
      }
     };
     for (let t of m) {
      t.fillServerCapabilities(e.capabilities);
     }
     return e;
    }
   });
   c.onRequest(i.ShutdownRequest.type, () => {
    l = true;
    if (_) {
     return _(new i.CancellationTokenSource().token);
    } else {
     return undefined;
    }
   });
   c.onNotification(i.ExitNotification.type, () => {
    try {
     if (T) {
      T();
     }
    } finally {
     if (l) {
      process.exit(0);
     } else {
      process.exit(1);
     }
    }
   });
   c.onNotification(i.SetTraceNotification.type, e => {
    f.trace = i.Trace.fromString(e.value);
   });
   return k;
  }
  var F;
  (function(e) {
   e.all = {
    __brand: "features"
   };
  })(F = t.ProposedFeatures || (t.ProposedFeatures = {}));
 },
 CcFB: function(e, t, n) {
  "use strict";
  Object.defineProperty(t, "__esModule", {
   value: true
  });
  const r = n("C+6V");
  var i;
  (function(e) {
   e.type = new r.RequestType("textDocument/implementation");
  })(i = t.ImplementationRequest || (t.ImplementationRequest = {}));
 },
 Ff8q: function(e, t, n) {
  "use strict";
  Object.defineProperty(t, "__esModule", {
   value: true
  });
  var r = n("Z5Ki");
  var i = n("1vg8");
  var o;
  (function(e) {
   e.None = Object.freeze({
    isCancellationRequested: false,
    onCancellationRequested: r.Event.None
   });
   e.Cancelled = Object.freeze({
    isCancellationRequested: true,
    onCancellationRequested: r.Event.None
   });
   function t(t) {
    var n = t;
    return n && (n === e.None || n === e.Cancelled || i.boolean(n.isCancellationRequested) && !!n.onCancellationRequested);
   }
   e.is = t;
  })(o = t.CancellationToken || (t.CancellationToken = {}));
  var s = Object.freeze(function(e, t) {
   var n = setTimeout(e.bind(t), 0);
   return {
    dispose: function() {
     clearTimeout(n);
    }
   };
  });
  var a = function() {
   function e() {
    this._isCancelled = false;
   }
   e.prototype.cancel = function() {
    if (!this._isCancelled) {
     this._isCancelled = true;
     if (this._emitter) {
      this._emitter.fire(undefined);
      this._emitter = undefined;
     }
    }
   };
   Object.defineProperty(e.prototype, "isCancellationRequested", {
    get: function() {
     return this._isCancelled;
    },
    enumerable: true,
    configurable: true
   });
   Object.defineProperty(e.prototype, "onCancellationRequested", {
    get: function() {
     if (this._isCancelled) {
      return s;
     }
     if (!this._emitter) {
      this._emitter = new r.Emitter();
     }
     return this._emitter.event;
    },
    enumerable: true,
    configurable: true
   });
   return e;
  }();
  var u = function() {
   function e() {}
   Object.defineProperty(e.prototype, "token", {
    get: function() {
     if (!this._token) {
      this._token = new a();
     }
     return this._token;
    },
    enumerable: true,
    configurable: true
   });
   e.prototype.cancel = function() {
    if (!this._token) {
     this._token = o.Cancelled;
    } else {
     this._token.cancel();
    }
   };
   e.prototype.dispose = function() {
    this.cancel();
   };
   return e;
  }();
  t.CancellationTokenSource = u;
 },
 J8Cw: function(e, t, n) {
  "use strict";
  (function(e) {
   const t = n("COhr");
   const r = n("oyvS");
   const i = n("yLgJ");
   const o = 2e5;
   let s = new Map();
   function a(e) {
    if (!s.has(e)) {
     let n;
     if (e === "npm") {
      n = t.Files.resolveGlobalNodePath();
     } else if (e === "yarn") {
      n = t.Files.resolveGlobalYarnPath();
     } else {
      n = t.Files.resolveGlobalNodePath() || t.Files.resolveGlobalYarnPath();
     }
     s.set(e, n);
    }
    return s.get(e);
   }
   function u(t, n) {
    const r = n.concat(e.paths ? e.paths.concat(i.globalPaths) : i.globalPaths);
    const o = i._findPath(t, r);
    if (!o) {
     throw new Error(`Cannot find module '${t}'`);
    }
    return o;
   }
   function c(e) {
    const t = e.typescript;
    let i = new Map();
    function s(e, t) {
     if (!e.configFile) {
      return e;
     }
     if (r.isAbsolute(e.configFile)) {
      return e;
     }
     e.configFile = r.join(t, e.configFile);
     return e;
    }
    function c(e) {
     e.project.projectService.logger.info("eslint-language-service loaded");
     let c = s(e.config, e.project.getCurrentDirectory());
     function f(t, i) {
      let o = [ a() ];
      let s = i;
      let c = r.resolve(i);
      do {
       s = c;
       c = r.dirname(s);
       o.push(r.join(c, "node_modules"));
      } while (c !== s);
      let f = u(t, o);
      let l = n("t1iH")(f);
      e.project.projectService.logger.info(`${t} library loaded from: ${f}`);
      return l;
     }
     const l = Object.create(null);
     const d = e.languageService;
     for (const e in d) {
      l[e] = function() {
       return d[e].apply(d, arguments);
      };
     }
     function p(n, r) {
      let i = n.ruleId != null ? `${n.message} (${n.ruleId})` : `${n.message}`;
      let s;
      if (c.alwaysShowRuleFailuresAsWarnings === true) {
       s = t.DiagnosticCategory.Warning;
      } else if (n.severity === 1) {
       s = t.DiagnosticCategory.Warning;
      } else {
       s = t.DiagnosticCategory.Error;
      }
      let a = Math.max(1, n.line);
      let u = Math.max(1, n.column);
      let f = n.endLine != null ? Math.max(1, n.endLine) : a;
      let l = n.endColumn != null ? Math.max(1, n.endColumn) : u;
      let d = e.project.projectService.getScriptInfo(r.fileName);
      let p = d.lineOffsetToPosition(a, u);
      let h = d.lineOffsetToPosition(f, l);
      let g = {
       file: r,
       start: p,
       length: h - p,
       messageText: i,
       category: s,
       source: "eslint",
       code: o
      };
      return g;
     }
     function h(e, t) {
      return `[${e},${t}]`;
     }
     function g(t, n) {
      let r = i.get(n.fileName);
      if (!r) {
       r = new Map();
       i.set(n.fileName, r);
      }
      let o = Math.max(1, t.line);
      let s = Math.max(1, t.column);
      let a = t.endLine != null ? Math.max(1, t.endLine) : o;
      let u = t.endColumn != null ? Math.max(1, t.endColumn) : s;
      let c = e.project.projectService.getScriptInfo(n.fileName);
      let f = c.lineOffsetToPosition(o, s);
      let l = c.lineOffsetToPosition(a, u);
      r.set(h(f, l), t);
     }
     function v(e) {
      return {
       newText: e.edit.text || "",
       span: {
        start: e.edit.range[0],
        length: e.edit.range[1] - e.edit.range[0]
       }
      };
     }
     function m(e) {
      return [ {
       label: "",
       documentVersion: 0,
       ruleId: e.ruleId,
       edit: e.fix
      } ];
     }
     function y(e, t) {
      let n = m(e);
      return {
       fileName: t,
       textChanges: n.map(e => v(e))
      };
     }
     function _(e, t, n) {
      e.push({
       description: `Fix this ${t.ruleId} problem`,
       changes: [ y(t, n) ]
      });
     }
     function b(e, t, n, r) {
      const i = [];
      for (const e of n.values()) {
       if (e.ruleId === t) {
        i.push(y(e, r));
       }
      }
      if (i.length < 2) {
       return;
      }
      e.push({
       description: `Fix all '${t}'`,
       changes: i
      });
     }
     function w(e, t, n, r) {
      e.push({
       description: `Disable rule '${t.ruleId}'`,
       changes: [ {
        fileName: n,
        textChanges: [ {
         newText: `// tslint:disable-next-line:${t.ruleId}\n`,
         span: {
          start: r.getLineStarts()[t.line],
          length: 0
         }
        } ]
       } ]
      });
     }
     function R(e, t, n) {
      const r = T(t);
      e.push({
       description: `Fix all auto-fixable tslint problems`,
       changes: [ {
        fileName: n,
        textChanges: r.map(e => v(e))
       } ]
      });
     }
     function C(e) {
      return e.sort((e, t) => {
       return e.fix.range[0] - t.fix.range[0];
      });
     }
     function T(e) {
      function t(e, t) {
       return e.edit.range[1] >= t.edit.range[0];
      }
      let n = C([ ...e.values() ]);
      let r = [];
      for (let e = 0; e < n.length; e++) {
       let i = m(n[e]);
       if (e === 0 || !t(r[r.length - 1], i[0])) {
        r.push(...i);
       }
      }
      return r;
     }
     l.getSemanticDiagnostics = (t => {
      let n = d.getSemanticDiagnostics(t);
      try {
       e.project.projectService.logger.info(`Computing eslint semantic diagnostics for ${t}`);
       if (c.supressWhileTypeErrorsPresent && n.length > 0) {
        return n;
       }
       let r;
       const i = d.getProgram().getSourceFile(t);
       try {
        let o = {
         fix: false
        };
        const s = f("eslint", t);
        let a = new s.CLIEngine(o);
        r = a.executeOnText(i.text, t);
       } catch (t) {
        let r = `unknown error`;
        if (typeof t.message === "string" || t.message instanceof String) {
         r = t.message;
        }
        e.project.projectService.logger.info("eslint error " + r);
        return n;
       }
       if (r && r.results && Array.isArray(r.results) && r.results.length > 0) {
        let e = r.results[0];
        if (e.messages && Array.isArray(e.messages)) {
         const t = n ? [ ...n ] : [];
         e.messages.forEach(e => {
          if (e) {
           t.push(p(e, i));
           g(e, i);
          }
         });
         return t;
        }
       }
      } catch (t) {
       e.project.projectService.logger.info(`eslint-language service error: ${t.toString()}`);
       e.project.projectService.logger.info(`Stack trace: ${t.stack}`);
      }
      return n;
     });
     l.getCodeFixesAtPosition = function(t, n, r, o, s, a) {
      let u = d.getCodeFixesAtPosition(t, n, r, o, s, a);
      if (c.supressWhileTypeErrorsPresent && u.length > 0) {
       return u;
      }
      e.project.projectService.logger.info("tslint-language-service getCodeFixes " + o[0]);
      let f = i.get(t);
      if (f) {
       const e = u ? [ ...u ] : [];
       let i = f.get(h(n, r));
       if (i) {
        _(e, i, t);
        b(e, i.ruleId, f, t);
       }
       R(e, f, t);
       if (i) {
        w(e, i, t, d.getProgram().getSourceFile(t));
       }
       return e;
      }
      return u;
     };
     return l;
    }
    return {
     create: c
    };
   }
   e.exports = c;
  }).call(this, n("YuTi")(e));
 },
 Jf2r: function(e, t, n) {
  "use strict";
  Object.defineProperty(t, "__esModule", {
   value: true
  });
  const r = n("BOov");
  t.WorkspaceFoldersFeature = (e => {
   return class extends e {
    initialize(e) {
     let t = e.workspace;
     if (t && t.workspaceFolders) {
      this._onDidChangeWorkspaceFolders = new r.Emitter();
      this.connection.onNotification(r.DidChangeWorkspaceFoldersNotification.type, e => {
       this._onDidChangeWorkspaceFolders.fire(e.event);
      });
     }
    }
    getWorkspaceFolders() {
     return this.connection.sendRequest(r.WorkspaceFoldersRequest.type);
    }
    get onDidChangeWorkspaceFolders() {
     if (!this._onDidChangeWorkspaceFolders) {
      throw new Error("Client doesn't support sending workspace folder change events.");
     }
     if (!this._unregistration) {
      this._unregistration = this.connection.client.register(r.DidChangeWorkspaceFoldersNotification.type);
     }
     return this._onDidChangeWorkspaceFolders.event;
    }
   };
  });
 },
 Krw1: function(e, t, n) {
  "use strict";
  Object.defineProperty(t, "__esModule", {
   value: true
  });
  const r = Object.prototype.toString;
  function i(e) {
   return typeof e !== "undefined";
  }
  t.defined = i;
  function o(e) {
   return typeof e === "undefined";
  }
  t.undefined = o;
  function s(e) {
   return e === null;
  }
  t.nil = s;
  function a(e) {
   return e === true || e === false;
  }
  t.boolean = a;
  function u(e) {
   return r.call(e) === "[object String]";
  }
  t.string = u;
  function c(e) {
   return r.call(e) === "[object Number]";
  }
  t.number = c;
  function f(e) {
   return r.call(e) === "[object Error]";
  }
  t.error = f;
  function l(e) {
   return r.call(e) === "[object Function]";
  }
  t.func = l;
  function d(e) {
   return Array.isArray(e);
  }
  t.array = d;
  function p(e) {
   return d(e) && e.every(e => u(e));
  }
  t.stringArray = p;
  function h(e, t) {
   return Array.isArray(e) && e.every(t);
  }
  t.typedArray = h;
  function g(e) {
   return e && l(e.then);
  }
  t.thenable = g;
 },
 PJMN: function(e, t) {
  e.exports = require("crypto");
 },
 QduZ: function(e, t) {
  e.exports = require("child_process");
 },
 "Qhc/": function(e, t, n) {
  "use strict";
  Object.defineProperty(t, "__esModule", {
   value: true
  });
  const r = n("BOov");
  const i = n("Krw1");
  t.ConfigurationFeature = (e => {
   return class extends e {
    getConfiguration(e) {
     if (!e) {
      return this._getConfiguration({});
     } else if (i.string(e)) {
      return this._getConfiguration({
       section: e
      });
     } else {
      return this._getConfiguration(e);
     }
    }
    _getConfiguration(e) {
     let t = {
      items: Array.isArray(e) ? e : [ e ]
     };
     return this.connection.sendRequest(r.ConfigurationRequest.type, t).then(t => {
      return Array.isArray(e) ? t : t[0];
     });
    }
   };
  });
 },
 Qs2e: function(e, t) {
  e.exports = require("net");
 },
 VqZt: function(e, t, n) {
  "use strict";
  Object.defineProperty(t, "__esModule", {
   value: true
  });
  const r = n("C+6V");
  var i;
  (function(e) {
   e.type = new r.RequestType0("workspace/workspaceFolders");
  })(i = t.WorkspaceFoldersRequest || (t.WorkspaceFoldersRequest = {}));
  var o;
  (function(e) {
   e.type = new r.NotificationType("workspace/didChangeWorkspaceFolders");
  })(o = t.DidChangeWorkspaceFoldersNotification || (t.DidChangeWorkspaceFoldersNotification = {}));
 },
 YuTi: function(e, t) {
  e.exports = function(e) {
   if (!e.webpackPolyfill) {
    e.deprecate = function() {};
    e.paths = [];
    if (!e.children) e.children = [];
    Object.defineProperty(e, "loaded", {
     enumerable: true,
     get: function() {
      return e.l;
     }
    });
    Object.defineProperty(e, "id", {
     enumerable: true,
     get: function() {
      return e.i;
     }
    });
    e.webpackPolyfill = 1;
   }
   return e;
  };
 },
 Z5Ki: function(e, t, n) {
  "use strict";
  Object.defineProperty(t, "__esModule", {
   value: true
  });
  var r;
  (function(e) {
   function t(e) {
    return {
     dispose: e
    };
   }
   e.create = t;
  })(r = t.Disposable || (t.Disposable = {}));
  var i;
  (function(e) {
   var t = {
    dispose: function() {}
   };
   e.None = function() {
    return t;
   };
  })(i = t.Event || (t.Event = {}));
  var o = function() {
   function e() {}
   e.prototype.add = function(e, t, n) {
    var r = this;
    if (t === void 0) {
     t = null;
    }
    if (!this._callbacks) {
     this._callbacks = [];
     this._contexts = [];
    }
    this._callbacks.push(e);
    this._contexts.push(t);
    if (Array.isArray(n)) {
     n.push({
      dispose: function() {
       return r.remove(e, t);
      }
     });
    }
   };
   e.prototype.remove = function(e, t) {
    if (t === void 0) {
     t = null;
    }
    if (!this._callbacks) {
     return;
    }
    var n = false;
    for (var r = 0, i = this._callbacks.length; r < i; r++) {
     if (this._callbacks[r] === e) {
      if (this._contexts[r] === t) {
       this._callbacks.splice(r, 1);
       this._contexts.splice(r, 1);
       return;
      } else {
       n = true;
      }
     }
    }
    if (n) {
     throw new Error("When adding a listener with a context, you should remove it with the same context");
    }
   };
   e.prototype.invoke = function() {
    var e = [];
    for (var t = 0; t < arguments.length; t++) {
     e[t] = arguments[t];
    }
    if (!this._callbacks) {
     return [];
    }
    var n = [], r = this._callbacks.slice(0), i = this._contexts.slice(0);
    for (var o = 0, s = r.length; o < s; o++) {
     try {
      n.push(r[o].apply(i[o], e));
     } catch (e) {
      console.error(e);
     }
    }
    return n;
   };
   e.prototype.isEmpty = function() {
    return !this._callbacks || this._callbacks.length === 0;
   };
   e.prototype.dispose = function() {
    this._callbacks = undefined;
    this._contexts = undefined;
   };
   return e;
  }();
  var s = function() {
   function e(e) {
    this._options = e;
   }
   Object.defineProperty(e.prototype, "event", {
    get: function() {
     var t = this;
     if (!this._event) {
      this._event = function(n, r, i) {
       if (!t._callbacks) {
        t._callbacks = new o();
       }
       if (t._options && t._options.onFirstListenerAdd && t._callbacks.isEmpty()) {
        t._options.onFirstListenerAdd(t);
       }
       t._callbacks.add(n, r);
       var s;
       s = {
        dispose: function() {
         t._callbacks.remove(n, r);
         s.dispose = e._noop;
         if (t._options && t._options.onLastListenerRemove && t._callbacks.isEmpty()) {
          t._options.onLastListenerRemove(t);
         }
        }
       };
       if (Array.isArray(i)) {
        i.push(s);
       }
       return s;
      };
     }
     return this._event;
    },
    enumerable: true,
    configurable: true
   });
   e.prototype.fire = function(e) {
    if (this._callbacks) {
     this._callbacks.invoke.call(this._callbacks, e);
    }
   };
   e.prototype.dispose = function() {
    if (this._callbacks) {
     this._callbacks.dispose();
     this._callbacks = undefined;
    }
   };
   e._noop = function() {};
   return e;
  }();
  t.Emitter = s;
 },
 bzos: function(e, t) {
  e.exports = require("url");
 },
 "jle/": function(e, t) {
  e.exports = require("os");
 },
 kmEW: function(e, t, n) {
  "use strict";
  n.r(t);
  n.d(t, "Position", function() {
   return r;
  });
  n.d(t, "Range", function() {
   return i;
  });
  n.d(t, "Location", function() {
   return o;
  });
  n.d(t, "DiagnosticRelatedInformation", function() {
   return s;
  });
  n.d(t, "DiagnosticSeverity", function() {
   return a;
  });
  n.d(t, "Diagnostic", function() {
   return u;
  });
  n.d(t, "Command", function() {
   return c;
  });
  n.d(t, "TextEdit", function() {
   return f;
  });
  n.d(t, "TextDocumentEdit", function() {
   return l;
  });
  n.d(t, "WorkspaceEdit", function() {
   return d;
  });
  n.d(t, "WorkspaceChange", function() {
   return h;
  });
  n.d(t, "TextDocumentIdentifier", function() {
   return g;
  });
  n.d(t, "VersionedTextDocumentIdentifier", function() {
   return v;
  });
  n.d(t, "TextDocumentItem", function() {
   return m;
  });
  n.d(t, "MarkupKind", function() {
   return y;
  });
  n.d(t, "MarkupContent", function() {
   return _;
  });
  n.d(t, "CompletionItemKind", function() {
   return b;
  });
  n.d(t, "InsertTextFormat", function() {
   return w;
  });
  n.d(t, "CompletionItem", function() {
   return R;
  });
  n.d(t, "CompletionList", function() {
   return C;
  });
  n.d(t, "MarkedString", function() {
   return T;
  });
  n.d(t, "Hover", function() {
   return x;
  });
  n.d(t, "ParameterInformation", function() {
   return q;
  });
  n.d(t, "SignatureInformation", function() {
   return S;
  });
  n.d(t, "DocumentHighlightKind", function() {
   return k;
  });
  n.d(t, "DocumentHighlight", function() {
   return E;
  });
  n.d(t, "SymbolKind", function() {
   return D;
  });
  n.d(t, "SymbolInformation", function() {
   return M;
  });
  n.d(t, "CodeActionKind", function() {
   return N;
  });
  n.d(t, "CodeActionContext", function() {
   return O;
  });
  n.d(t, "CodeAction", function() {
   return P;
  });
  n.d(t, "CodeLens", function() {
   return j;
  });
  n.d(t, "FormattingOptions", function() {
   return W;
  });
  n.d(t, "DocumentLink", function() {
   return F;
  });
  n.d(t, "EOL", function() {
   return I;
  });
  n.d(t, "TextDocument", function() {
   return L;
  });
  n.d(t, "TextDocumentSaveReason", function() {
   return A;
  });
  var r;
  (function(e) {
   function t(e, t) {
    return {
     line: e,
     character: t
    };
   }
   e.create = t;
   function n(e) {
    var t = e;
    return z.objectLiteral(t) && z.number(t.line) && z.number(t.character);
   }
   e.is = n;
  })(r || (r = {}));
  var i;
  (function(e) {
   function t(e, t, n, i) {
    if (z.number(e) && z.number(t) && z.number(n) && z.number(i)) {
     return {
      start: r.create(e, t),
      end: r.create(n, i)
     };
    } else if (r.is(e) && r.is(t)) {
     return {
      start: e,
      end: t
     };
    } else {
     throw new Error("Range#create called with invalid arguments[" + e + ", " + t + ", " + n + ", " + i + "]");
    }
   }
   e.create = t;
   function n(e) {
    var t = e;
    return z.objectLiteral(t) && r.is(t.start) && r.is(t.end);
   }
   e.is = n;
  })(i || (i = {}));
  var o;
  (function(e) {
   function t(e, t) {
    return {
     uri: e,
     range: t
    };
   }
   e.create = t;
   function n(e) {
    var t = e;
    return z.defined(t) && i.is(t.range) && (z.string(t.uri) || z.undefined(t.uri));
   }
   e.is = n;
  })(o || (o = {}));
  var s;
  (function(e) {
   function t(e, t) {
    return {
     location: e,
     message: t
    };
   }
   e.create = t;
   function n(e) {
    var t = e;
    return z.defined(t) && o.is(t.location) && z.string(t.message);
   }
   e.is = n;
  })(s || (s = {}));
  var a;
  (function(e) {
   e.Error = 1;
   e.Warning = 2;
   e.Information = 3;
   e.Hint = 4;
  })(a || (a = {}));
  var u;
  (function(e) {
   function t(e, t, n, r, i, o) {
    var s = {
     range: e,
     message: t
    };
    if (z.defined(n)) {
     s.severity = n;
    }
    if (z.defined(r)) {
     s.code = r;
    }
    if (z.defined(i)) {
     s.source = i;
    }
    if (z.defined(o)) {
     s.relatedInformation = o;
    }
    return s;
   }
   e.create = t;
   function n(e) {
    var t = e;
    return z.defined(t) && i.is(t.range) && z.string(t.message) && (z.number(t.severity) || z.undefined(t.severity)) && (z.number(t.code) || z.string(t.code) || z.undefined(t.code)) && (z.string(t.source) || z.undefined(t.source)) && (z.undefined(t.relatedInformation) || z.typedArray(t.relatedInformation, s.is));
   }
   e.is = n;
  })(u || (u = {}));
  var c;
  (function(e) {
   function t(e, t) {
    var n = [];
    for (var r = 2; r < arguments.length; r++) {
     n[r - 2] = arguments[r];
    }
    var i = {
     title: e,
     command: t
    };
    if (z.defined(n) && n.length > 0) {
     i.arguments = n;
    }
    return i;
   }
   e.create = t;
   function n(e) {
    var t = e;
    return z.defined(t) && z.string(t.title) && z.string(t.command);
   }
   e.is = n;
  })(c || (c = {}));
  var f;
  (function(e) {
   function t(e, t) {
    return {
     range: e,
     newText: t
    };
   }
   e.replace = t;
   function n(e, t) {
    return {
     range: {
      start: e,
      end: e
     },
     newText: t
    };
   }
   e.insert = n;
   function r(e) {
    return {
     range: e,
     newText: ""
    };
   }
   e.del = r;
  })(f || (f = {}));
  var l;
  (function(e) {
   function t(e, t) {
    return {
     textDocument: e,
     edits: t
    };
   }
   e.create = t;
   function n(e) {
    var t = e;
    return z.defined(t) && v.is(t.textDocument) && Array.isArray(t.edits);
   }
   e.is = n;
  })(l || (l = {}));
  var d;
  (function(e) {
   function t(e) {
    var t = e;
    return t && (t.changes !== void 0 || t.documentChanges !== void 0) && (t.documentChanges === void 0 || z.typedArray(t.documentChanges, l.is));
   }
   e.is = t;
  })(d || (d = {}));
  var p = function() {
   function e(e) {
    this.edits = e;
   }
   e.prototype.insert = function(e, t) {
    this.edits.push(f.insert(e, t));
   };
   e.prototype.replace = function(e, t) {
    this.edits.push(f.replace(e, t));
   };
   e.prototype.delete = function(e) {
    this.edits.push(f.del(e));
   };
   e.prototype.add = function(e) {
    this.edits.push(e);
   };
   e.prototype.all = function() {
    return this.edits;
   };
   e.prototype.clear = function() {
    this.edits.splice(0, this.edits.length);
   };
   return e;
  }();
  var h = function() {
   function e(e) {
    var t = this;
    this._textEditChanges = Object.create(null);
    if (e) {
     this._workspaceEdit = e;
     if (e.documentChanges) {
      e.documentChanges.forEach(function(e) {
       var n = new p(e.edits);
       t._textEditChanges[e.textDocument.uri] = n;
      });
     } else if (e.changes) {
      Object.keys(e.changes).forEach(function(n) {
       var r = new p(e.changes[n]);
       t._textEditChanges[n] = r;
      });
     }
    }
   }
   Object.defineProperty(e.prototype, "edit", {
    get: function() {
     return this._workspaceEdit;
    },
    enumerable: true,
    configurable: true
   });
   e.prototype.getTextEditChange = function(e) {
    if (v.is(e)) {
     if (!this._workspaceEdit) {
      this._workspaceEdit = {
       documentChanges: []
      };
     }
     if (!this._workspaceEdit.documentChanges) {
      throw new Error("Workspace edit is not configured for versioned document changes.");
     }
     var t = e;
     var n = this._textEditChanges[t.uri];
     if (!n) {
      var r = [];
      var i = {
       textDocument: t,
       edits: r
      };
      this._workspaceEdit.documentChanges.push(i);
      n = new p(r);
      this._textEditChanges[t.uri] = n;
     }
     return n;
    } else {
     if (!this._workspaceEdit) {
      this._workspaceEdit = {
       changes: Object.create(null)
      };
     }
     if (!this._workspaceEdit.changes) {
      throw new Error("Workspace edit is not configured for normal text edit changes.");
     }
     var n = this._textEditChanges[e];
     if (!n) {
      var r = [];
      this._workspaceEdit.changes[e] = r;
      n = new p(r);
      this._textEditChanges[e] = n;
     }
     return n;
    }
   };
   return e;
  }();
  var g;
  (function(e) {
   function t(e) {
    return {
     uri: e
    };
   }
   e.create = t;
   function n(e) {
    var t = e;
    return z.defined(t) && z.string(t.uri);
   }
   e.is = n;
  })(g || (g = {}));
  var v;
  (function(e) {
   function t(e, t) {
    return {
     uri: e,
     version: t
    };
   }
   e.create = t;
   function n(e) {
    var t = e;
    return z.defined(t) && z.string(t.uri) && z.number(t.version);
   }
   e.is = n;
  })(v || (v = {}));
  var m;
  (function(e) {
   function t(e, t, n, r) {
    return {
     uri: e,
     languageId: t,
     version: n,
     text: r
    };
   }
   e.create = t;
   function n(e) {
    var t = e;
    return z.defined(t) && z.string(t.uri) && z.string(t.languageId) && z.number(t.version) && z.string(t.text);
   }
   e.is = n;
  })(m || (m = {}));
  var y;
  (function(e) {
   e.PlainText = "plaintext";
   e.Markdown = "markdown";
  })(y || (y = {}));
  (function(e) {
   function t(t) {
    var n = t;
    return n === e.PlainText || n === e.Markdown;
   }
   e.is = t;
  })(y || (y = {}));
  var _;
  (function(e) {
   function t(e) {
    var t = e;
    return z.objectLiteral(e) && y.is(t.kind) && z.string(t.value);
   }
   e.is = t;
  })(_ || (_ = {}));
  var b;
  (function(e) {
   e.Text = 1;
   e.Method = 2;
   e.Function = 3;
   e.Constructor = 4;
   e.Field = 5;
   e.Variable = 6;
   e.Class = 7;
   e.Interface = 8;
   e.Module = 9;
   e.Property = 10;
   e.Unit = 11;
   e.Value = 12;
   e.Enum = 13;
   e.Keyword = 14;
   e.Snippet = 15;
   e.Color = 16;
   e.File = 17;
   e.Reference = 18;
   e.Folder = 19;
   e.EnumMember = 20;
   e.Constant = 21;
   e.Struct = 22;
   e.Event = 23;
   e.Operator = 24;
   e.TypeParameter = 25;
  })(b || (b = {}));
  var w;
  (function(e) {
   e.PlainText = 1;
   e.Snippet = 2;
  })(w || (w = {}));
  var R;
  (function(e) {
   function t(e) {
    return {
     label: e
    };
   }
   e.create = t;
  })(R || (R = {}));
  var C;
  (function(e) {
   function t(e, t) {
    return {
     items: e ? e : [],
     isIncomplete: !!t
    };
   }
   e.create = t;
  })(C || (C = {}));
  var T;
  (function(e) {
   function t(e) {
    return e.replace(/[\\`*_{}[\]()#+\-.!]/g, "\\$&");
   }
   e.fromPlainText = t;
   function n(e) {
    var t = e;
    return z.string(t) || z.objectLiteral(t) && z.string(t.language) && z.string(t.value);
   }
   e.is = n;
  })(T || (T = {}));
  var x;
  (function(e) {
   function t(e) {
    var t = e;
    return z.objectLiteral(t) && (_.is(t.contents) || T.is(t.contents) || z.typedArray(t.contents, T.is)) && (e.range === void 0 || i.is(e.range));
   }
   e.is = t;
  })(x || (x = {}));
  var q;
  (function(e) {
   function t(e, t) {
    return t ? {
     label: e,
     documentation: t
    } : {
     label: e
    };
   }
   e.create = t;
  })(q || (q = {}));
  var S;
  (function(e) {
   function t(e, t) {
    var n = [];
    for (var r = 2; r < arguments.length; r++) {
     n[r - 2] = arguments[r];
    }
    var i = {
     label: e
    };
    if (z.defined(t)) {
     i.documentation = t;
    }
    if (z.defined(n)) {
     i.parameters = n;
    } else {
     i.parameters = [];
    }
    return i;
   }
   e.create = t;
  })(S || (S = {}));
  var k;
  (function(e) {
   e.Text = 1;
   e.Read = 2;
   e.Write = 3;
  })(k || (k = {}));
  var E;
  (function(e) {
   function t(e, t) {
    var n = {
     range: e
    };
    if (z.number(t)) {
     n.kind = t;
    }
    return n;
   }
   e.create = t;
  })(E || (E = {}));
  var D;
  (function(e) {
   e.File = 1;
   e.Module = 2;
   e.Namespace = 3;
   e.Package = 4;
   e.Class = 5;
   e.Method = 6;
   e.Property = 7;
   e.Field = 8;
   e.Constructor = 9;
   e.Enum = 10;
   e.Interface = 11;
   e.Function = 12;
   e.Variable = 13;
   e.Constant = 14;
   e.String = 15;
   e.Number = 16;
   e.Boolean = 17;
   e.Array = 18;
   e.Object = 19;
   e.Key = 20;
   e.Null = 21;
   e.EnumMember = 22;
   e.Struct = 23;
   e.Event = 24;
   e.Operator = 25;
   e.TypeParameter = 26;
  })(D || (D = {}));
  var M;
  (function(e) {
   function t(e, t, n, r, i) {
    var o = {
     name: e,
     kind: t,
     location: {
      uri: r,
      range: n
     }
    };
    if (i) {
     o.containerName = i;
    }
    return o;
   }
   e.create = t;
  })(M || (M = {}));
  var N;
  (function(e) {
   e.QuickFix = "quickfix";
   e.Refactor = "refactor";
   e.RefactorExtract = "refactor.extract";
   e.RefactorInline = "refactor.inline";
   e.RefactorRewrite = "refactor.rewrite";
   e.Source = "source";
   e.SourceOrganizeImports = "source.organizeImports";
  })(N || (N = {}));
  var O;
  (function(e) {
   function t(e, t) {
    var n = {
     diagnostics: e
    };
    if (t !== void 0 && t !== null) {
     n.only = t;
    }
    return n;
   }
   e.create = t;
   function n(e) {
    var t = e;
    return z.defined(t) && z.typedArray(t.diagnostics, u.is) && (t.only === void 0 || z.typedArray(t.only, z.string));
   }
   e.is = n;
  })(O || (O = {}));
  var P;
  (function(e) {
   function t(e, t, n) {
    var r = {
     title: e
    };
    if (c.is(t)) {
     r.command = t;
    } else {
     r.edit = t;
    }
    if (n !== void null) {
     r.kind = n;
    }
    return r;
   }
   e.create = t;
   function n(e) {
    var t = e;
    return t && z.string(t.title) && (t.diagnostics === void 0 || z.typedArray(t.diagnostics, u.is)) && (t.kind === void 0 || z.string(t.kind)) && (t.edit !== void 0 || t.command !== void 0) && (t.command === void 0 || c.is(t.command)) && (t.edit === void 0 || d.is(t.edit));
   }
   e.is = n;
  })(P || (P = {}));
  var j;
  (function(e) {
   function t(e, t) {
    var n = {
     range: e
    };
    if (z.defined(t)) n.data = t;
    return n;
   }
   e.create = t;
   function n(e) {
    var t = e;
    return z.defined(t) && i.is(t.range) && (z.undefined(t.command) || c.is(t.command));
   }
   e.is = n;
  })(j || (j = {}));
  var W;
  (function(e) {
   function t(e, t) {
    return {
     tabSize: e,
     insertSpaces: t
    };
   }
   e.create = t;
   function n(e) {
    var t = e;
    return z.defined(t) && z.number(t.tabSize) && z.boolean(t.insertSpaces);
   }
   e.is = n;
  })(W || (W = {}));
  var F = function() {
   function e() {}
   return e;
  }();
  (function(e) {
   function t(e, t, n) {
    return {
     range: e,
     target: t,
     data: n
    };
   }
   e.create = t;
   function n(e) {
    var t = e;
    return z.defined(t) && i.is(t.range) && (z.undefined(t.target) || z.string(t.target));
   }
   e.is = n;
  })(F || (F = {}));
  var I = [ "\n", "\r\n", "\r" ];
  var L;
  (function(e) {
   function t(e, t, n, r) {
    return new H(e, t, n, r);
   }
   e.create = t;
   function n(e) {
    var t = e;
    return z.defined(t) && z.string(t.uri) && (z.undefined(t.languageId) || z.string(t.languageId)) && z.number(t.lineCount) && z.func(t.getText) && z.func(t.positionAt) && z.func(t.offsetAt) ? true : false;
   }
   e.is = n;
   function r(e, t) {
    var n = e.getText();
    var r = i(t, function(e, t) {
     var n = e.range.start.line - t.range.start.line;
     if (n === 0) {
      return e.range.start.character - t.range.start.character;
     }
     return n;
    });
    var o = n.length;
    for (var s = r.length - 1; s >= 0; s--) {
     var a = r[s];
     var u = e.offsetAt(a.range.start);
     var c = e.offsetAt(a.range.end);
     if (c <= o) {
      n = n.substring(0, u) + a.newText + n.substring(c, n.length);
     } else {
      throw new Error("Ovelapping edit");
     }
     o = u;
    }
    return n;
   }
   e.applyEdits = r;
   function i(e, t) {
    if (e.length <= 1) {
     return e;
    }
    var n = e.length / 2 | 0;
    var r = e.slice(0, n);
    var o = e.slice(n);
    i(r, t);
    i(o, t);
    var s = 0;
    var a = 0;
    var u = 0;
    while (s < r.length && a < o.length) {
     var c = t(r[s], o[a]);
     if (c <= 0) {
      e[u++] = r[s++];
     } else {
      e[u++] = o[a++];
     }
    }
    while (s < r.length) {
     e[u++] = r[s++];
    }
    while (a < o.length) {
     e[u++] = o[a++];
    }
    return e;
   }
  })(L || (L = {}));
  var A;
  (function(e) {
   e.Manual = 1;
   e.AfterDelay = 2;
   e.FocusOut = 3;
  })(A || (A = {}));
  var H = function() {
   function e(e, t, n, r) {
    this._uri = e;
    this._languageId = t;
    this._version = n;
    this._content = r;
    this._lineOffsets = null;
   }
   Object.defineProperty(e.prototype, "uri", {
    get: function() {
     return this._uri;
    },
    enumerable: true,
    configurable: true
   });
   Object.defineProperty(e.prototype, "languageId", {
    get: function() {
     return this._languageId;
    },
    enumerable: true,
    configurable: true
   });
   Object.defineProperty(e.prototype, "version", {
    get: function() {
     return this._version;
    },
    enumerable: true,
    configurable: true
   });
   e.prototype.getText = function(e) {
    if (e) {
     var t = this.offsetAt(e.start);
     var n = this.offsetAt(e.end);
     return this._content.substring(t, n);
    }
    return this._content;
   };
   e.prototype.update = function(e, t) {
    this._content = e.text;
    this._version = t;
    this._lineOffsets = null;
   };
   e.prototype.getLineOffsets = function() {
    if (this._lineOffsets === null) {
     var e = [];
     var t = this._content;
     var n = true;
     for (var r = 0; r < t.length; r++) {
      if (n) {
       e.push(r);
       n = false;
      }
      var i = t.charAt(r);
      n = i === "\r" || i === "\n";
      if (i === "\r" && r + 1 < t.length && t.charAt(r + 1) === "\n") {
       r++;
      }
     }
     if (n && t.length > 0) {
      e.push(t.length);
     }
     this._lineOffsets = e;
    }
    return this._lineOffsets;
   };
   e.prototype.positionAt = function(e) {
    e = Math.max(Math.min(e, this._content.length), 0);
    var t = this.getLineOffsets();
    var n = 0, i = t.length;
    if (i === 0) {
     return r.create(0, e);
    }
    while (n < i) {
     var o = Math.floor((n + i) / 2);
     if (t[o] > e) {
      i = o;
     } else {
      n = o + 1;
     }
    }
    var s = n - 1;
    return r.create(s, e - t[s]);
   };
   e.prototype.offsetAt = function(e) {
    var t = this.getLineOffsets();
    if (e.line >= t.length) {
     return this._content.length;
    } else if (e.line < 0) {
     return 0;
    }
    var n = t[e.line];
    var r = e.line + 1 < t.length ? t[e.line + 1] : this._content.length;
    return Math.max(Math.min(n + e.character, r), n);
   };
   Object.defineProperty(e.prototype, "lineCount", {
    get: function() {
     return this.getLineOffsets().length;
    },
    enumerable: true,
    configurable: true
   });
   return e;
  }();
  var z;
  (function(e) {
   var t = Object.prototype.toString;
   function n(e) {
    return typeof e !== "undefined";
   }
   e.defined = n;
   function r(e) {
    return typeof e === "undefined";
   }
   e.undefined = r;
   function i(e) {
    return e === true || e === false;
   }
   e.boolean = i;
   function o(e) {
    return t.call(e) === "[object String]";
   }
   e.string = o;
   function s(e) {
    return t.call(e) === "[object Number]";
   }
   e.number = s;
   function a(e) {
    return t.call(e) === "[object Function]";
   }
   e.func = a;
   function u(e) {
    return e !== null && typeof e === "object";
   }
   e.objectLiteral = u;
   function c(e, t) {
    return Array.isArray(e) && e.every(t);
   }
   e.typedArray = c;
  })(z || (z = {}));
 },
 "mw/K": function(e, t) {
  e.exports = require("fs");
 },
 mz6j: function(e, t, n) {
  "use strict";
  Object.defineProperty(t, "__esModule", {
   value: true
  });
  class r {
   constructor(e) {
    this._value = e;
   }
   asHex() {
    return this._value;
   }
   equals(e) {
    return this.asHex() === e.asHex();
   }
  }
  class i extends r {
   constructor() {
    super([ i._randomHex(), i._randomHex(), i._randomHex(), i._randomHex(), i._randomHex(), i._randomHex(), i._randomHex(), i._randomHex(), "-", i._randomHex(), i._randomHex(), i._randomHex(), i._randomHex(), "-", "4", i._randomHex(), i._randomHex(), i._randomHex(), "-", i._oneOf(i._timeHighBits), i._randomHex(), i._randomHex(), i._randomHex(), "-", i._randomHex(), i._randomHex(), i._randomHex(), i._randomHex(), i._randomHex(), i._randomHex(), i._randomHex(), i._randomHex(), i._randomHex(), i._randomHex(), i._randomHex(), i._randomHex() ].join(""));
   }
   static _oneOf(e) {
    return e[Math.floor(e.length * Math.random())];
   }
   static _randomHex() {
    return i._oneOf(i._chars);
   }
  }
  i._chars = [ "0", "1", "2", "3", "4", "5", "6", "6", "7", "8", "9", "a", "b", "c", "d", "e", "f" ];
  i._timeHighBits = [ "8", "9", "a", "b" ];
  t.empty = new r("00000000-0000-0000-0000-000000000000");
  function o() {
   return new i();
  }
  t.v4 = o;
  const s = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;
  function a(e) {
   return s.test(e);
  }
  t.isUUID = a;
  function u(e) {
   if (!a(e)) {
    throw new Error("invalid uuid");
   }
   return new r(e);
  }
  t.parse = u;
  function c() {
   return o().asHex();
  }
  t.generateUuid = c;
 },
 owkM: function(e, t, n) {
  "use strict";
  Object.defineProperty(t, "__esModule", {
   value: true
  });
  const r = Object.prototype.toString;
  function i(e) {
   return e === true || e === false;
  }
  t.boolean = i;
  function o(e) {
   return r.call(e) === "[object String]";
  }
  t.string = o;
  function s(e) {
   return r.call(e) === "[object Number]";
  }
  t.number = s;
  function a(e) {
   return r.call(e) === "[object Error]";
  }
  t.error = a;
  function u(e) {
   return r.call(e) === "[object Function]";
  }
  t.func = u;
  function c(e) {
   return Array.isArray(e);
  }
  t.array = c;
  function f(e) {
   return c(e) && e.every(e => o(e));
  }
  t.stringArray = f;
  function l(e, t) {
   return Array.isArray(e) && e.every(t);
  }
  t.typedArray = l;
  function d(e) {
   return e && u(e.then);
  }
  t.thenable = d;
 },
 oyvS: function(e, t) {
  e.exports = require("path");
 },
 qL5x: function(e, t, n) {
  "use strict";
  Object.defineProperty(t, "__esModule", {
   value: true
  });
  var r = n("oyvS");
  var i = n("jle/");
  var o = n("PJMN");
  var s = n("Qs2e");
  var a = n("uWpP");
  var u = n("vIUA");
  function c() {
   var e = o.randomBytes(21).toString("hex");
   if (process.platform === "win32") {
    return "\\\\.\\pipe\\vscode-jsonrpc-" + e + "-sock";
   } else {
    return r.join(i.tmpdir(), "vscode-" + e + ".sock");
   }
  }
  t.generateRandomPipeName = c;
  function f(e, t) {
   if (t === void 0) {
    t = "utf-8";
   }
   var n;
   var r = new Promise(function(e, t) {
    n = e;
   });
   return new Promise(function(i, o) {
    var c = s.createServer(function(e) {
     c.close();
     n([ new a.SocketMessageReader(e, t), new u.SocketMessageWriter(e, t) ]);
    });
    c.on("error", o);
    c.listen(e, function() {
     c.removeListener("error", o);
     i({
      onConnected: function() {
       return r;
      }
     });
    });
   });
  }
  t.createClientPipeTransport = f;
  function l(e, t) {
   if (t === void 0) {
    t = "utf-8";
   }
   var n = s.createConnection(e);
   return [ new a.SocketMessageReader(n, t), new u.SocketMessageWriter(n, t) ];
  }
  t.createServerPipeTransport = l;
 },
 sKb1: function(e, t, n) {
  "use strict";
  Object.defineProperty(t, "__esModule", {
   value: true
  });
  const r = n("C+6V");
  var i;
  (function(e) {
   e.type = new r.RequestType("workspace/configuration");
  })(i = t.ConfigurationRequest || (t.ConfigurationRequest = {}));
 },
 t1iH: function(e, t) {
  function n(e) {
   return require(e);
  }
  n.keys = function() {
   return [];
  };
  n.resolve = require.resolve;
  e.exports = n;
  n.id = "t1iH";
 },
 tGke: function(e, t, n) {
  "use strict";
  Object.defineProperty(t, "__esModule", {
   value: true
  });
  const r = n("bzos");
  const i = n("oyvS");
  const o = n("mw/K");
  const s = n("QduZ");
  function a(e) {
   let t = r.parse(e);
   if (t.protocol !== "file:" || !t.path) {
    return undefined;
   }
   let n = t.path.split("/");
   for (var o = 0, s = n.length; o < s; o++) {
    n[o] = decodeURIComponent(n[o]);
   }
   if (process.platform === "win32" && n.length > 1) {
    let e = n[0];
    let t = n[1];
    if (e.length === 0 && t.length > 1 && t[1] === ":") {
     n.shift();
    }
   }
   return i.normalize(n.join("/"));
  }
  t.uriToFilePath = a;
  function u() {
   return process.platform === "win32";
  }
  function c(e, t) {
   let r = "NODE_PATH";
   return new Promise((o, a) => {
    let c = [];
    if (e) {
     c.push(i.join(e, "node_modules"));
    }
    s.exec("npm config get prefix", (e, f, l) => {
     if (!e) {
      let e = f.replace(/[\s\r\n]+$/, "");
      if (e.length > 0) {
       if (u()) {
        c.push(i.join(e, "node_modules"));
       } else {
        c.push(i.join(e, "lib", "node_modules"));
       }
      }
     }
     let d = u() ? ";" : ":";
     let p = process.env;
     let h = Object.create(null);
     Object.keys(p).forEach(e => h[e] = p[e]);
     if (h[r]) {
      h[r] = c.join(d) + d + h[r];
     } else {
      h[r] = c.join(d);
     }
     try {
      let r = s.fork(i.join(__dirname, "resolve.js"), [], {
       env: h,
       execArgv: []
      });
      r.on("message", e => {
       if (e.command === "resolve") {
        let i = t;
        if (e.success) {
         i = e.result;
        }
        r.send({
         command: "exit"
        });
        try {
         o(n("tduj")(i));
        } catch (e) {
         a(e);
        }
       }
      });
      let u = {
       command: "resolve",
       args: t
      };
      r.send(u);
     } catch (e) {
      a(e);
     }
    });
   });
  }
  t.resolveModule = c;
  function f(e, t, n, r) {
   const o = "NODE_PATH";
   const a = [ "var p = process;", "p.on('message',function(m){", "if(m.c==='e'){", "p.exit(0);", "}", "else if(m.c==='rs'){", "try{", "var r=require.resolve(m.a);", "p.send({c:'r',s:true,r:r});", "}", "catch(err){", "p.send({c:'r',s:false});", "}", "}", "});" ].join("");
   return new Promise((u, c) => {
    let f = process.env;
    let l = Object.create(null);
    Object.keys(f).forEach(e => l[e] = f[e]);
    if (t) {
     if (l[o]) {
      l[o] = t + i.delimiter + l[o];
     } else {
      l[o] = t;
     }
     if (r) {
      r(`NODE_PATH value is: ${l[o]}`);
     }
    }
    l["ATOM_SHELL_INTERNAL_RUN_AS_NODE"] = "1";
    try {
     let t = s.fork("", [], {
      cwd: n,
      env: l,
      execArgv: [ "-e", a ]
     });
     t.on("error", e => {
      c(e);
     });
     t.on("message", n => {
      if (n.c === "r") {
       t.send({
        c: "e"
       });
       if (n.s) {
        u(n.r);
       } else {
        c(new Error(`Failed to resolve module: ${e}`));
       }
      }
     });
     let r = {
      c: "rs",
      a: e
     };
     t.send(r);
    } catch (e) {
     c(e);
    }
   });
  }
  t.resolve = f;
  function l(e) {
   let t = "npm";
   let n = {
    encoding: "utf8"
   };
   if (u()) {
    t = "npm.cmd";
    n.shell = true;
   }
   let r = s.spawnSync(t, [ "config", "get", "prefix" ], n).stdout;
   if (!r) {
    if (e) {
     e(`'npm config get prefix' didn't return a value.`);
    }
    return undefined;
   }
   let o = r.trim();
   if (e) {
    e(`'npm config get prefix' value is: ${o}`);
   }
   if (o.length > 0) {
    if (u()) {
     return i.join(o, "node_modules");
    } else {
     return i.join(o, "lib", "node_modules");
    }
   }
   return undefined;
  }
  t.resolveGlobalNodePath = l;
  function d(e) {
   let t = "yarn";
   let n = {
    encoding: "utf8"
   };
   if (u()) {
    t = "yarn.cmd";
    n.shell = true;
   }
   let r = s.spawnSync(t, [ "global", "dir", "--json" ], n);
   let o = r.stdout;
   if (!o) {
    if (e) {
     e(`'yarn global dir' didn't return a value.`);
     if (r.stderr) {
      e(r.stderr);
     }
    }
    return undefined;
   }
   let a = o.trim().split(/\r?\n/);
   for (let e of a) {
    try {
     let t = JSON.parse(e);
     if (t.type === "log") {
      return i.join(t.data, "node_modules");
     }
    } catch (e) {}
   }
   return undefined;
  }
  t.resolveGlobalYarnPath = d;
  var p;
  (function(e) {
   let t = undefined;
   function n() {
    if (t !== void 0) {
     return t;
    }
    if (process.platform === "win32") {
     t = false;
    } else {
     t = !o.existsSync(__filename.toUpperCase()) || !o.existsSync(__filename.toLowerCase());
    }
    return t;
   }
   e.isCaseSensitive = n;
   function r(e, t) {
    if (n()) {
     return i.normalize(t).indexOf(i.normalize(e)) === 0;
    } else {
     return i.normalize(t).toLowerCase().indexOf(i.normalize(e).toLowerCase()) == 0;
    }
   }
   e.isParent = r;
  })(p = t.FileSystem || (t.FileSystem = {}));
  function h(e, t, n, r) {
   if (n) {
    if (!i.isAbsolute(n)) {
     n = i.join(e, n);
    }
    return f(t, n, n, r).then(e => {
     if (p.isParent(n, e)) {
      return e;
     } else {
      return Promise.reject(new Error(`Failed to load ${t} from node path location.`));
     }
    }).then(undefined, n => {
     return f(t, l(r), e, r);
    });
   } else {
    return f(t, l(r), e, r);
   }
  }
  t.resolveModulePath = h;
  function g(e, t, r, i) {
   return h(e, t, r, i).then(e => {
    if (i) {
     i(`Module ${t} got resolved to ${e}`);
    }
    return n("tduj")(e);
   });
  }
  t.resolveModule2 = g;
 },
 tduj: function(e, t) {
  function n(e) {
   return require(e);
  }
  n.keys = function() {
   return [];
  };
  n.resolve = require.resolve;
  e.exports = n;
  n.id = "tduj";
 },
 uWpP: function(e, t, n) {
  "use strict";
  var r = this && this.__extends || function() {
   var e = Object.setPrototypeOf || {
    __proto__: []
   } instanceof Array && function(e, t) {
    e.__proto__ = t;
   } || function(e, t) {
    for (var n in t) if (t.hasOwnProperty(n)) e[n] = t[n];
   };
   return function(t, n) {
    e(t, n);
    function r() {
     this.constructor = t;
    }
    t.prototype = n === null ? Object.create(n) : (r.prototype = n.prototype, new r());
   };
  }();
  Object.defineProperty(t, "__esModule", {
   value: true
  });
  var i = n("Z5Ki");
  var o = n("1vg8");
  var s = 8192;
  var a = new Buffer("\r", "ascii")[0];
  var u = new Buffer("\n", "ascii")[0];
  var c = "\r\n";
  var f = function() {
   function e(e) {
    if (e === void 0) {
     e = "utf8";
    }
    this.encoding = e;
    this.index = 0;
    this.buffer = new Buffer(s);
   }
   e.prototype.append = function(e) {
    var t = e;
    if (typeof e === "string") {
     var n = e;
     var r = Buffer.byteLength(n, this.encoding);
     t = new Buffer(r);
     t.write(n, 0, r, this.encoding);
    }
    if (this.buffer.length - this.index >= t.length) {
     t.copy(this.buffer, this.index, 0, t.length);
    } else {
     var i = (Math.ceil((this.index + t.length) / s) + 1) * s;
     if (this.index === 0) {
      this.buffer = new Buffer(i);
      t.copy(this.buffer, 0, 0, t.length);
     } else {
      this.buffer = Buffer.concat([ this.buffer.slice(0, this.index), t ], i);
     }
    }
    this.index += t.length;
   };
   e.prototype.tryReadHeaders = function() {
    var e = undefined;
    var t = 0;
    while (t + 3 < this.index && (this.buffer[t] !== a || this.buffer[t + 1] !== u || this.buffer[t + 2] !== a || this.buffer[t + 3] !== u)) {
     t++;
    }
    if (t + 3 >= this.index) {
     return e;
    }
    e = Object.create(null);
    var n = this.buffer.toString("ascii", 0, t).split(c);
    n.forEach(function(t) {
     var n = t.indexOf(":");
     if (n === -1) {
      throw new Error("Message header must separate key and value using :");
     }
     var r = t.substr(0, n);
     var i = t.substr(n + 1).trim();
     e[r] = i;
    });
    var r = t + 4;
    this.buffer = this.buffer.slice(r);
    this.index = this.index - r;
    return e;
   };
   e.prototype.tryReadContent = function(e) {
    if (this.index < e) {
     return null;
    }
    var t = this.buffer.toString(this.encoding, 0, e);
    var n = e;
    this.buffer.copy(this.buffer, 0, n);
    this.index = this.index - n;
    return t;
   };
   Object.defineProperty(e.prototype, "numberOfBytes", {
    get: function() {
     return this.index;
    },
    enumerable: true,
    configurable: true
   });
   return e;
  }();
  var l;
  (function(e) {
   function t(e) {
    var t = e;
    return t && o.func(t.listen) && o.func(t.dispose) && o.func(t.onError) && o.func(t.onClose) && o.func(t.onPartialMessage);
   }
   e.is = t;
  })(l = t.MessageReader || (t.MessageReader = {}));
  var d = function() {
   function e() {
    this.errorEmitter = new i.Emitter();
    this.closeEmitter = new i.Emitter();
    this.partialMessageEmitter = new i.Emitter();
   }
   e.prototype.dispose = function() {
    this.errorEmitter.dispose();
    this.closeEmitter.dispose();
   };
   Object.defineProperty(e.prototype, "onError", {
    get: function() {
     return this.errorEmitter.event;
    },
    enumerable: true,
    configurable: true
   });
   e.prototype.fireError = function(e) {
    this.errorEmitter.fire(this.asError(e));
   };
   Object.defineProperty(e.prototype, "onClose", {
    get: function() {
     return this.closeEmitter.event;
    },
    enumerable: true,
    configurable: true
   });
   e.prototype.fireClose = function() {
    this.closeEmitter.fire(undefined);
   };
   Object.defineProperty(e.prototype, "onPartialMessage", {
    get: function() {
     return this.partialMessageEmitter.event;
    },
    enumerable: true,
    configurable: true
   });
   e.prototype.firePartialMessage = function(e) {
    this.partialMessageEmitter.fire(e);
   };
   e.prototype.asError = function(e) {
    if (e instanceof Error) {
     return e;
    } else {
     return new Error("Reader recevied error. Reason: " + (o.string(e.message) ? e.message : "unknown"));
    }
   };
   return e;
  }();
  t.AbstractMessageReader = d;
  var p = function(e) {
   r(t, e);
   function t(t, n) {
    if (n === void 0) {
     n = "utf8";
    }
    var r = e.call(this) || this;
    r.readable = t;
    r.buffer = new f(n);
    r._partialMessageTimeout = 1e4;
    return r;
   }
   Object.defineProperty(t.prototype, "partialMessageTimeout", {
    get: function() {
     return this._partialMessageTimeout;
    },
    set: function(e) {
     this._partialMessageTimeout = e;
    },
    enumerable: true,
    configurable: true
   });
   t.prototype.listen = function(e) {
    var t = this;
    this.nextMessageLength = -1;
    this.messageToken = 0;
    this.partialMessageTimer = undefined;
    this.callback = e;
    this.readable.on("data", function(e) {
     t.onData(e);
    });
    this.readable.on("error", function(e) {
     return t.fireError(e);
    });
    this.readable.on("close", function() {
     return t.fireClose();
    });
   };
   t.prototype.onData = function(e) {
    this.buffer.append(e);
    while (true) {
     if (this.nextMessageLength === -1) {
      var t = this.buffer.tryReadHeaders();
      if (!t) {
       return;
      }
      var n = t["Content-Length"];
      if (!n) {
       throw new Error("Header must provide a Content-Length property.");
      }
      var r = parseInt(n);
      if (isNaN(r)) {
       throw new Error("Content-Length value must be a number.");
      }
      this.nextMessageLength = r;
     }
     var i = this.buffer.tryReadContent(this.nextMessageLength);
     if (i === null) {
      this.setPartialMessageTimer();
      return;
     }
     this.clearPartialMessageTimer();
     this.nextMessageLength = -1;
     this.messageToken++;
     var o = JSON.parse(i);
     this.callback(o);
    }
   };
   t.prototype.clearPartialMessageTimer = function() {
    if (this.partialMessageTimer) {
     clearTimeout(this.partialMessageTimer);
     this.partialMessageTimer = undefined;
    }
   };
   t.prototype.setPartialMessageTimer = function() {
    var e = this;
    this.clearPartialMessageTimer();
    if (this._partialMessageTimeout <= 0) {
     return;
    }
    this.partialMessageTimer = setTimeout(function(t, n) {
     e.partialMessageTimer = undefined;
     if (t === e.messageToken) {
      e.firePartialMessage({
       messageToken: t,
       waitingTime: n
      });
      e.setPartialMessageTimer();
     }
    }, this._partialMessageTimeout, this.messageToken, this._partialMessageTimeout);
   };
   return t;
  }(d);
  t.StreamMessageReader = p;
  var h = function(e) {
   r(t, e);
   function t(t) {
    var n = e.call(this) || this;
    n.process = t;
    var r = n.process;
    r.on("error", function(e) {
     return n.fireError(e);
    });
    r.on("close", function() {
     return n.fireClose();
    });
    return n;
   }
   t.prototype.listen = function(e) {
    this.process.on("message", e);
   };
   return t;
  }(d);
  t.IPCMessageReader = h;
  var g = function(e) {
   r(t, e);
   function t(t, n) {
    if (n === void 0) {
     n = "utf-8";
    }
    return e.call(this, t, n) || this;
   }
   return t;
  }(p);
  t.SocketMessageReader = g;
 },
 vIUA: function(e, t, n) {
  "use strict";
  var r = this && this.__extends || function() {
   var e = Object.setPrototypeOf || {
    __proto__: []
   } instanceof Array && function(e, t) {
    e.__proto__ = t;
   } || function(e, t) {
    for (var n in t) if (t.hasOwnProperty(n)) e[n] = t[n];
   };
   return function(t, n) {
    e(t, n);
    function r() {
     this.constructor = t;
    }
    t.prototype = n === null ? Object.create(n) : (r.prototype = n.prototype, new r());
   };
  }();
  Object.defineProperty(t, "__esModule", {
   value: true
  });
  var i = n("Z5Ki");
  var o = n("1vg8");
  var s = "Content-Length: ";
  var a = "\r\n";
  var u;
  (function(e) {
   function t(e) {
    var t = e;
    return t && o.func(t.dispose) && o.func(t.onClose) && o.func(t.onError) && o.func(t.write);
   }
   e.is = t;
  })(u = t.MessageWriter || (t.MessageWriter = {}));
  var c = function() {
   function e() {
    this.errorEmitter = new i.Emitter();
    this.closeEmitter = new i.Emitter();
   }
   e.prototype.dispose = function() {
    this.errorEmitter.dispose();
    this.closeEmitter.dispose();
   };
   Object.defineProperty(e.prototype, "onError", {
    get: function() {
     return this.errorEmitter.event;
    },
    enumerable: true,
    configurable: true
   });
   e.prototype.fireError = function(e, t, n) {
    this.errorEmitter.fire([ this.asError(e), t, n ]);
   };
   Object.defineProperty(e.prototype, "onClose", {
    get: function() {
     return this.closeEmitter.event;
    },
    enumerable: true,
    configurable: true
   });
   e.prototype.fireClose = function() {
    this.closeEmitter.fire(undefined);
   };
   e.prototype.asError = function(e) {
    if (e instanceof Error) {
     return e;
    } else {
     return new Error("Writer recevied error. Reason: " + (o.string(e.message) ? e.message : "unknown"));
    }
   };
   return e;
  }();
  t.AbstractMessageWriter = c;
  var f = function(e) {
   r(t, e);
   function t(t, n) {
    if (n === void 0) {
     n = "utf8";
    }
    var r = e.call(this) || this;
    r.writable = t;
    r.encoding = n;
    r.errorCount = 0;
    r.writable.on("error", function(e) {
     return r.fireError(e);
    });
    r.writable.on("close", function() {
     return r.fireClose();
    });
    return r;
   }
   t.prototype.write = function(e) {
    var t = JSON.stringify(e);
    var n = Buffer.byteLength(t, this.encoding);
    var r = [ s, n.toString(), a, a ];
    try {
     this.writable.write(r.join(""), "ascii");
     this.writable.write(t, this.encoding);
     this.errorCount = 0;
    } catch (t) {
     this.errorCount++;
     this.fireError(t, e, this.errorCount);
    }
   };
   return t;
  }(c);
  t.StreamMessageWriter = f;
  var l = function(e) {
   r(t, e);
   function t(t) {
    var n = e.call(this) || this;
    n.process = t;
    n.errorCount = 0;
    n.queue = [];
    n.sending = false;
    var r = n.process;
    r.on("error", function(e) {
     return n.fireError(e);
    });
    r.on("close", function() {
     return n.fireClose;
    });
    return n;
   }
   t.prototype.write = function(e) {
    if (!this.sending && this.queue.length === 0) {
     this.doWriteMessage(e);
    } else {
     this.queue.push(e);
    }
   };
   t.prototype.doWriteMessage = function(e) {
    var t = this;
    try {
     if (this.process.send) {
      this.sending = true;
      this.process.send(e, undefined, undefined, function(n) {
       t.sending = false;
       if (n) {
        t.errorCount++;
        t.fireError(n, e, t.errorCount);
       } else {
        t.errorCount = 0;
       }
       if (t.queue.length > 0) {
        t.doWriteMessage(t.queue.shift());
       }
      });
     }
    } catch (t) {
     this.errorCount++;
     this.fireError(t, e, this.errorCount);
    }
   };
   return t;
  }(c);
  t.IPCMessageWriter = l;
  var d = function(e) {
   r(t, e);
   function t(t, n) {
    if (n === void 0) {
     n = "utf8";
    }
    var r = e.call(this) || this;
    r.socket = t;
    r.queue = [];
    r.sending = false;
    r.encoding = n;
    r.errorCount = 0;
    r.socket.on("error", function(e) {
     return r.fireError(e);
    });
    r.socket.on("close", function() {
     return r.fireClose();
    });
    return r;
   }
   t.prototype.write = function(e) {
    if (!this.sending && this.queue.length === 0) {
     this.doWriteMessage(e);
    } else {
     this.queue.push(e);
    }
   };
   t.prototype.doWriteMessage = function(e) {
    var t = this;
    var n = JSON.stringify(e);
    var r = Buffer.byteLength(n, this.encoding);
    var i = [ s, r.toString(), a, a ];
    try {
     this.sending = true;
     this.socket.write(i.join(""), "ascii", function(r) {
      if (r) {
       t.handleError(r, e);
      }
      try {
       t.socket.write(n, t.encoding, function(n) {
        t.sending = false;
        if (n) {
         t.handleError(n, e);
        } else {
         t.errorCount = 0;
        }
        if (t.queue.length > 0) {
         t.doWriteMessage(t.queue.shift());
        }
       });
      } catch (r) {
       t.handleError(r, e);
      }
     });
    } catch (t) {
     this.handleError(t, e);
    }
   };
   t.prototype.handleError = function(e, t) {
    this.errorCount++;
    this.fireError(e, t, this.errorCount);
   };
   return t;
  }(c);
  t.SocketMessageWriter = d;
 },
 yLgJ: function(e, t) {
  e.exports = require("module");
 },
 zZpG: function(e, t, n) {
  "use strict";
  Object.defineProperty(t, "__esModule", {
   value: true
  });
  const r = n("C+6V");
  var i;
  (function(e) {
   e.type = new r.RequestType("textDocument/documentColor");
  })(i = t.DocumentColorRequest || (t.DocumentColorRequest = {}));
  var o;
  (function(e) {
   e.type = new r.RequestType("textDocument/colorPresentation");
  })(o = t.ColorPresentationRequest || (t.ColorPresentationRequest = {}));
 }
});